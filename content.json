{"meta":{"title":"咕哒子的博客","subtitle":"","description":"咕哒子的博客","author":"咕哒子","url":"https://windowsxp002.github.io","root":"/"},"pages":[{"title":"tags","date":"2020-01-04T06:48:23.000Z","updated":"2020-01-05T05:12:25.000Z","comments":false,"path":"tags/index.html","permalink":"https://windowsxp002.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-01-04T06:49:31.000Z","updated":"2020-01-04T06:49:58.000Z","comments":false,"path":"categories/index.html","permalink":"https://windowsxp002.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"JavaScript学习笔记-1","slug":"JavaScript学习笔记-1","date":"2020-02-27T03:41:30.000Z","updated":"2020-02-27T03:45:18.172Z","comments":true,"path":"2020/02/27/JavaScript学习笔记-1/","link":"","permalink":"https://windowsxp002.github.io/2020/02/27/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/","excerpt":"JavaScript学习笔记-1记录一下JavaScript学习，第一篇。","text":"JavaScript学习笔记-1记录一下JavaScript学习，第一篇。 概念一门客户端脚本语言，可在本地执行 与HTML结合方式 内部js 在HTML定义一个&lt;script&gt;js代码&lt;/script&gt;标签，可以定义在HTML的任何位置，但是房子位置会影响js代码执行顺序，并且是阻塞式的，如果没有执行完毕不会运行接下来的html代码 外部js &lt;script&gt;src = &quot;外部js路径&quot;&lt;/script&gt; 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;测试javascript&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script&gt; alert(\"hrlloworld\"); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 数据类型 原始数据类型 number：数字（整数、小数、NaN(not a number 一个不是数字的数字类型)） string：字符串（字符和字符串）“ABC” ‘ABC’ booleam：布尔类型 true false null：一个对象为空 undefined：未定义。如果一个变量 没有给初始化值，则会默认被赋值undefined 引用数据类型：对象 变量 var 变量名 = 初始化值； 1234567891011121314151617181920212223242526&lt;script&gt; // alert(\"hrlloworld\"); var a = \"a\"; // alert(a); var str = \"abc\"; var str2 = \"def\"; // var bool = true; var obj = null; var int = 1; var int2 = NaN; var def = undefined; //输出到页面上 document.write(a +\"----\"+typeof(a)+ \"&lt;br/&gt;\"); document.write(str +\"----\"+typeof(str) + \"&lt;br/&gt;\"); document.write(str2 +\"----\"+typeof(str2) + \"&lt;br/&gt;\"); document.write(bool +\"----\"+typeof(bool) + \"&lt;br/&gt;\"); document.write(int +\"----\"+typeof(int)+ \"&lt;br/&gt;\"); document.write(int2 +\"----\"+typeof(int2)+ \"&lt;br/&gt;\"); document.write(obj +\"----\"+typeof(obj)+ \"&lt;br/&gt;\"); document.write(def +\"----\"+typeof(def)+ \"&lt;br/&gt;\");&lt;/script&gt; 运算符 算术运算符 运算符 描述 + 加法 - 减法 * 乘法 / 除法 % 取模 ++ 自加 – 自减 赋值运算符 运算符 例子 等同于 = x = y x = y += x += y x = x + y -= x -= y x = x - y *= x *= y x = x * y /= x /= y x = x / y %= x %= y x = x % y 123456789101112131415161718+ 运算符也可用于对字符串进行相加（concatenate，级联）。 txt1 = \"Bill\"; txt2 = \"Gates\"; txt3 = txt1 + \" \" + txt2; 结果为Bill Gates+= 赋值运算符也可用于相加（级联）字符串： txt1 = \"Hello \"; txt1 += \"Kitty!\"; 结果为 Hello Kitty!相加两个数字，将返回和，但对一个数字和一个字符串相加将返回一个字符串： x = 7 + 8; y = \"7\" + 8; z = \"Hello\" + 7; x、y 和 z 的结果将是： 15 78 Hello7 比较运算符 类型相同直接比较 字符串按照字典顺序比较，逐位比较 类型不同。先进行转化再比较 ===先进行类型判断，如果不同直接false，否则接着比较 运算符 描述 == 等于 === 等值等型 != 不相等 !== 不等值或不等型 &gt; 大于 &lt; 小于 &gt;= 大于或等于 &lt;= 小于或等于 ? 三元运算符 逻辑运算符 运算符 描述 &amp;&amp; 逻辑与(有短路的效果) || 逻辑或(有短路的效果) ! 逻辑非 类型运算符 运算符 描述 typeof 返回变量的类型。 instanceof 返回 true，如果对象是对象类型的实例。 位运算符 运算符 描述 例子 等同于 结果 十进制 &amp; 与 5 &amp; 1 0101 &amp; 0001 0001 1 | 或 5 | 1 0101 | 0001 0101 5 ~ 非 ~ 5 ~0101 1010 10 ^ 异或 5 ^ 1 0101 ^ 0001 0100 4 &lt;&lt; 零填充左位移 5 &lt;&lt; 1 0101 &lt;&lt; 1 1010 10 &gt;&gt; 有符号右位移 5 &gt;&gt; 1 0101 &gt;&gt; 1 0010 2 &gt;&gt;&gt; 零填充右位移 5 &gt;&gt;&gt; 1 0101 &gt;&gt;&gt; 1 0010 2 注意事项 string转number：按照字面转化，如果字面不是数字则转化为NaN； boolean转number***：***true为1；false为0； number转Boolean：0或NaN为假非0为真； string转Boolean：除了空字符串都是true； null&amp;undefine:都是false 所有对象都是true 左移 都是 乘 ；右移 都是 除 左移一位就是乘2； 三元运算符：d=a?b:c 流程控制语句与Java保持一致 if…else… switch while do…while for 特殊语法 语句以;结尾，如果一行只有一条语句则;可以省略； 变量定义使用var关键字，也可以不使用;如果使用定义的变量是局部变量，不用就是全局变量；即变量的作用域不同； 小例子1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;99乘法表&lt;/title&gt; &lt;style&gt; td&#123; border: 1px solid; color: palevioletred; &#125; &lt;/style&gt; &lt;script&gt; //for循环嵌套 document.write(\"&lt;table align='center'&gt; \") for(var i=1;i&lt;=9;i++)&#123; document.write(\"&lt;tr&gt;\") for(var j=1;j&lt;=i;j++)&#123; document.write(\"&lt;td&gt;\") document.write(i+\"*\"+j+\"=\"+(i*j)+\"&amp;nbsp\"); document.write(\"&lt;/td&gt;\") &#125; document.write(\"&lt;/tr&gt;\") //输出换行 //document.write(\"&lt;br/&gt;\"); &#125; document.write(\"&lt;/table&gt;\"); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"前端","slug":"前端","permalink":"https://windowsxp002.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://windowsxp002.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://windowsxp002.github.io/tags/JavaScript/"}]},{"title":"CSS学习笔记","slug":"CSS学习笔记","date":"2020-02-26T10:46:01.000Z","updated":"2020-02-27T03:44:17.268Z","comments":true,"path":"2020/02/26/CSS学习笔记/","link":"","permalink":"https://windowsxp002.github.io/2020/02/26/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"CSS学习笔记记录一下CSS学习笔记。","text":"CSS学习笔记记录一下CSS学习笔记。 概念层叠样式表：cascading Style Sheets, 层叠：多个样式可以作用在一个HTML元素上，同时生效 html与CSS结合方式 内联样式 在标签内使用style属性指定CSS代码；由键值对构成，中间用分号隔开；没有实现样式分离，不建议使用 内部样式 在head中定义style标签，style标签中的内容就是CSS代码，只能在当前页面生效 123456&lt;style&gt; div&#123;&lt;!-- 注意吃div不是标签--&gt; color: blue; &#125; &lt;/style&gt; 外联样式 将CSS代码抽取到外部文件中去 1、定义CSS文件 2、在head标签内定义link标签，引入外部CSS资源文件 1&lt;link rel=\"stylesheet\" href=\"./CSS/a.css\" /&gt; 123div&#123; color: brown&#125; 或者也可以通过以下方式引入 123&lt;style&gt; @import url(\"CSS/a.css\"); &lt;/style&gt; 注意事项：三种方式作用范围越来越大 基本语法 格式 12345678910111213选择器1&#123; 属性名：属性值； 属性名：属性值； 属性名：属性值； ···&#125;选择器2&#123; 属性名：属性值； 属性名：属性值； 属性名：属性值； ···&#125;··· 选择器：筛选具有相似特征的元素；每一对的属性需要使用分号隔开，最后一对属性可以不加分号 选择器种类 基本选择器 id选择器：选择具体的ID属性值#id 元素选择器：选择具有相同标签名称的元素，低于id要选择器 类选择器：选择具有相同Class属性值的元素，语法.class属性值（），比元素选择器优先级高 选择器优先级：id&gt;类&gt;元素 拓展选择器 *选择所有元素；*{} 并集选择器：选择多个只选择器选择器1，选择器2{} 子选择器：选择器1 选择器2{}筛选选择器1下的选择器2 父选择器：选择器1&gt;选择器2{}筛选选择器2的父选择器1 属性选择器：选择元素名称，属性名= 属性值的元素元素名称[属性名=&quot;属性值&quot;]{} 伪类选择器：选择一类元素具有的状态元素：状态{} 以超链接为例 link：初始化的状态 visited：被访问过的状态 active：正在访问的状态 hover：鼠标悬浮状态 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;测试CSS&lt;/title&gt; &lt;!-- 测试内部样式 --&gt; &lt;!-- &lt;link rel=\"stylesheet\" href=\"./CSS/a.css\" /&gt; --&gt; &lt;style&gt; #div1&#123; color: blueviolet; font-size: 30px; &#125; div&#123; color: #7FFF00; &#125; .cla&#123; color: fuchsia; &#125; /* 子选择器 */ div p&#123; color: firebrick; &#125; /* 父选择器 */ div &gt; p&#123; border: 0.0625rem solid; &#125; input[type=\"text\"]&#123; border: 0.0625rem solid; &#125; /* 伪选择器 */ a:link&#123; color: pink; &#125; a:hover&#123; color: darkcyan; &#125; a:visited&#123; color: black; &#125; a:active&#123; color: blueviolet; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- &lt;!-- 测试内联样式 &lt;div style=\"color: aqua;\"&gt;hello CSS!&lt;/div&gt; --&gt; &lt;div&gt;Hello&lt;/div&gt; &lt;p&gt;呵呵&lt;/p&gt; &lt;div id=\"div1\"&gt;DIV1测试&lt;/div&gt;&lt;br /&gt; &lt;div&gt;DIV2&lt;/div&gt;&lt;br /&gt; &lt;p class=\"cla\"&gt; 测试&lt;/p&gt;&lt;br /&gt; &lt;!-- 子选择器 --&gt; &lt;div&gt; &lt;p&gt;锄禾日当午&lt;/p&gt;&lt;br /&gt; &lt;p&gt;汗滴禾下土&lt;/p&gt;&lt;br /&gt; &lt;/div&gt; 测试&lt;input type=\"text\" /&gt;&lt;br /&gt;&lt;br /&gt; &lt;a href=\"https://www.baidu.com\"&gt;百度&lt;/a&gt; &lt;/body&gt;&lt;/html&gt; CSS属性常用属性 字体文本 font-size color:文版颜色 test-align:对齐方式 line-heignt:行高 背景 background：复合属性 边框 border：设置边框，复合属性 尺寸 width：宽 height：高 盒子模型 一个元素一个盒子 外边距：margin 内边距：padding ，默认情况下内边距会影响整个盒子的大小，可以设置属性让width和height不变box-sizing:border-box float:浮动属性 left right 例子 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; /* p&#123; color: orangered; font-size: 1.875rem; text-align: center; line-height: 5; border-top: #FF4500 0.0625rem solid; border-left: orange 0.0625rem solid; border-right: black 0.0625rem solid; border-bottom: blue 0.0625rem solid; &#125; div&#123; border: #000000 solid; height: 1.875rem; width: 1.875rem; &#125; body&#123; border: #000000 solid; background: blanchedalmond center; &#125; */ div &#123; border: 1px solid red; &#125; .div1 &#123; width: 200px; height: 200px; padding: 50px; box-sizing: border-box; &#125; .div2 &#123; width: 100PX; height: 100px; /* margin: 3.125rem; */ &#125; .div3 &#123; float: left; &#125; .div4 &#123; float: left; &#125; .div5 &#123; float: left; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- &lt;p&gt;测试&lt;/p&gt; &lt;div&gt; &lt;/div&gt; --&gt; &lt;div class=\"div1\"&gt; &lt;div class=\"div2\"&gt; &lt;/div&gt; &lt;/div&gt; &lt;br /&gt; &lt;div class=\"div3\"&gt;aaa&lt;/div&gt; &lt;div class=\"div4\"&gt;bbb&lt;/div&gt; &lt;div class=\"div5\"&gt;ccc&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"前端","slug":"前端","permalink":"https://windowsxp002.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://windowsxp002.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"CSS","slug":"CSS","permalink":"https://windowsxp002.github.io/tags/CSS/"}]},{"title":"Html学习笔记","slug":"Html学习笔记","date":"2020-02-26T08:04:23.000Z","updated":"2020-02-27T03:48:40.044Z","comments":true,"path":"2020/02/26/Html学习笔记/","link":"","permalink":"https://windowsxp002.github.io/2020/02/26/Html%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"HTML学习笔记记录一下CSS学习笔记。","text":"HTML学习笔记记录一下CSS学习笔记。 概念 HTML hyper text markup language 超文本标记语言 超文本 超文本使用链接的方式，将不同的文字信息连接在一起 标记语言 不是编程语言 快速入门 语法 1、html文档.html或者htm 1234567891011&lt;html&gt; &lt;head&gt; &lt;title&gt; Title &lt;/title&gt; &lt;/head&gt; &lt;bady&gt; &lt;font color=\"red\"&gt; HELLO WORLD!&lt;/font&gt; &lt;/bady&gt;&lt;/html&gt; 2 标签分类 围堵标签:有开始标签和结束标签 自闭合标签: 开始标签和结束标签在一起 3 标签可以嵌套 4 可以在开始标签中定义属性,属性由键值对构成,值需要用引号包括起来(单引号和双引号都可以) 5 HTML标签不区分大小写,但是建议小写 标签学习 1、文件标签 html：标识HTML文档的根标签 head：头标签。用于指定HTML的一些属性，可以引入外部资源 title：定义标题的标签 body：体标签 2、文本标签 12345678910注释&lt;!--注释--&gt;&lt;h1&gt; to &lt;h6&gt;:标题标签&lt;p&gt;&lt;/p&gt;:段落标签&lt;br&gt;换行，自闭合&lt;hr&gt;:水平线，自闭合 与Markdown一致&lt;b&gt;字体加粗&lt;/b&gt; &lt;i&gt;斜体标签&lt;/i&gt; &lt;!-- 相对路径 以“./目录” 表示当前目录--&gt; &lt;!-- 以“../” 表示上一级目录--&gt; 3、图片标签 &lt;img src=&quot;路径&quot;&gt; 与Markdown语法一致 4、列表标签 有序列表 order list &lt;ol&gt; &lt;ol&gt; &lt;li&gt;第一项&lt;/li&gt; &lt;li&gt;第二项&lt;/li&gt; &lt;li&gt;第三项&lt;/li&gt; &lt;li&gt;第四项&lt;/li&gt; &lt;/ol&gt; 123456789101112 - 无序列表unorder list &#96;&#96;&lt;ul&gt;&#96;&#96; &#96;&#96;&#96;html &lt;ul type&#x3D;&quot;disc&quot;&gt; &lt;li&gt;第一项&lt;&#x2F;li&gt; &lt;li&gt;第二项&lt;&#x2F;li&gt; &lt;li&gt;第三项&lt;&#x2F;li&gt; &lt;li&gt;第四项&lt;&#x2F;li&gt; &lt;&#x2F;ul&gt; 5、链接标签 &lt;a href=&quot;https://www.baidu.com&quot;&gt;点我&lt;/a&gt; 1234- &lt;a herf&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&quot;&gt;点我&lt;&#x2F;a&gt; &lt;!--与Markdown一致--&gt;- &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;_self&quot;&gt;点我&lt;/a&gt; &lt;!-- 默认 --&gt; &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;_blank&quot;&gt;点我&lt;/a&gt; 12- &lt;a href=&quot;mailto:1679190840@qq.com&quot;&gt;测试邮件&lt;/a&gt; 12- &lt;!--a标签嵌套图片--&gt; &lt;a href=&quot;https://www.baidu.com&quot;&gt;&lt;img src=&quot;D:\\图片\\爱壁纸UWP\\视觉\\视觉 - 1.jpg&quot; height=&quot;100&quot; width=&quot;100&quot;/&gt;&lt;/a&gt; 1234567891011121314151617181920212223242526272829303132333435363738- **6、表格标签** - table:定义表格 - tr：定义行 - td：定义单元格 - th：定义表头单元格 - &#96;&#96;&#96;html &lt;table border&#x3D;&quot;1&quot; width&#x3D;&quot;50%&quot; cellpadding&#x3D;&quot;0&quot; cellspacing&#x3D;&quot;0&quot;&gt; &lt;tr&gt; &lt;td&gt;编号&lt;&#x2F;td&gt; &lt;td&gt;姓名&lt;&#x2F;td&gt; &lt;td&gt;成绩&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;&#x2F;td&gt; &lt;td&gt;test1&lt;&#x2F;td&gt; &lt;td&gt;99&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;&#x2F;td&gt; &lt;td&gt;test2&lt;&#x2F;td&gt; &lt;td&gt;88&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;&#x2F;td&gt; &lt;td&gt;test3&lt;&#x2F;td&gt; &lt;td&gt;77&lt;&#x2F;td&gt; &lt;&#x2F;tr&gt; &lt;&#x2F;table&gt; width ：宽度 boder：边框 cellpadding ：内容与单元格空隙 cellspacing：单元格间的空隙 bgcolor：背景颜色 align：对齐方式 caption：表格信息 thead：表示表头 tbody：表示表体 tfoot：表示表尾 rospan:占两行 cospan：占两列 7、语义标签 &lt;header&gt;&lt;/header&gt; &lt;footer&gt;&lt;/footer&gt; 123456789 - - **8、div和span标签** - &#96;&#96;&#96;html &lt;span&gt;测试Span&lt;&#x2F;span&gt;&lt;!-- 起包裹作用，没有任何效果，和CSS结合，默认一行 ，行级标签--&gt; &lt;div&gt;测试div&lt;&#x2F;div&gt;&lt;!-- 同样没有任何样式，占满一行，块级标签 --&gt; 9、表单标签 用于采集用户输入数据 实用的标签form 123456789101112131415&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;表单标签&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- form标签用于定义表单的标签 --&gt; &lt;form action=\"#\" method=\"get\"&gt; 用户名：&lt;input name=\"UserName\" /&gt;&lt;br /&gt; 密码：&lt;input name=\"Password\"/&gt;&lt;br /&gt; &lt;input type=\"submit\" value=\"登录\"/&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 属性：action：指定提交数据的URL 属性： method：指定提交的方式 GET 会在地址栏中显示 GET 从指定的资源请求数据 GET 请求可被缓存 GET 请求保留在浏览器历史记录中 GET 请求可被收藏为书签 GET 请求不应在处理敏感数据时使用 GET 请求有长度限制 GET 请求只应当用于取回数据 POST 不会再地址栏中显示，会分装在请求体中 POST 向指定的资源提交要被处理的数据 POST 请求不会被缓存 POST 请求不会保留在浏览器历史记录中 POST 不能被收藏为书签 POST 请求对数据长度没有要求 表单数据要被提交必须指定name属性 input标签 可以通过type属性改变样式 text ：placeholder=”请输入用户名” 提示信息 password radio：单选框 ，多个单选框要想实现单选name值必须一致,需要给每个单选框设置value设置值 checkbox：复选框 checked=&quot;checked&quot;默认选中 &lt;lable&gt;标签for属性和id属性绑定，有点击效果 file：文件选择框 hidden：隐藏的数据 button：一个按钮， image：图片提交按钮 data：日期 email：会做正则校验 select标签：下拉标签 注意必须设置name属性才能被提交 子元素：&lt;option&gt;&lt;/option&gt; testarea标签：文本域 cols:指定列数，每一行多少字符 rows：指定行数 实例 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;title&gt;表单标签&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- form标签用于定义表单的标签 --&gt; &lt;form action=\"#\" method=\"get\"&gt; &lt;label for=\"username\"&gt;用户名&lt;/label&gt;:&lt;input type=\"text\" name=\"UserName\" id=\"username\" placeholder=\"请输入用户名\" /&gt; &lt;br /&gt; &lt;label for=\"password\"&gt;密码&lt;/label&gt;:&lt;input type=\"password\" name=\"Password\" id=\"password\" /&gt; &lt;br /&gt; &lt;label&gt;性别&lt;/label&gt;:&lt;input type=\"radio\" name=\"gender\" value=\"male\" /&gt; 男 &lt;input type=\"radio\" name=\"gender\" value=\"female\" /&gt; 女 &lt;br /&gt; &lt;!-- 复选框 --&gt; 爱好:&lt;input type=\"checkbox\" value=\"movie\" checked=\"checked\" /&gt; 看电影 &lt;br /&gt; 爱好:&lt;input type=\"checkbox\" value=\"game\" /&gt; 玩游戏 &lt;br /&gt; 爱好:&lt;input type=\"checkbox\" value=\"java\" /&gt; 学java &lt;br /&gt; &lt;br /&gt; 选择图片:&lt;input type=\"file\" /&gt; &lt;br /&gt; 隐藏域：&lt;input type=\"hidden\" id=\"hidden\" /&gt; &lt;br /&gt; 生日：&lt;input type=\"date\" /&gt;&lt;br /&gt; 生日：&lt;input type=\"datetime\" /&gt;&lt;br /&gt; 邮箱：&lt;input type=\"email\" /&gt;&lt;br /&gt; 数字:&lt;input type=\"number\" /&gt;&lt;br /&gt; 省份：&lt;select name=\"provience\"&gt; &lt;option&gt;北京&lt;/option&gt; &lt;option&gt;上海&lt;/option&gt; &lt;option&gt;江西&lt;/option&gt; &lt;option&gt;山东&lt;/option&gt; &lt;option&gt;福建&lt;/option&gt; &lt;/select&gt;&lt;br /&gt; 自我描述:&lt;textarea cols=\"20\" rows=\"5\" name=\"description\"&gt;&lt;/textarea&gt; &lt;br /&gt; &lt;input type=\"button\" /&gt; &lt;br /&gt; &lt;input type=\"image\" src=\"D:\\图片\\爱壁纸UWP\\艺术\\艺术 - 2.jpg\" width=\"50\" /&gt;&lt;br /&gt; &lt;input type=\"submit\" value=\"登录\" /&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt;","categories":[{"name":"前端","slug":"前端","permalink":"https://windowsxp002.github.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"https://windowsxp002.github.io/tags/HTML/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://windowsxp002.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}]},{"title":"wsl遇到的坑","slug":"wsl遇到的坑","date":"2020-01-23T05:51:59.000Z","updated":"2020-02-12T08:27:38.996Z","comments":true,"path":"2020/01/23/wsl遇到的坑/","link":"","permalink":"https://windowsxp002.github.io/2020/01/23/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/","excerpt":"使用windows linux subsystem遇到的一些问题在更换了电脑之后自然想用新电脑作为主力开发工具，博客之类的环境也自然要更换到新电脑上面来，旧电脑只装了Ubuntu，新电脑用Windows+WSL作为开发工具。","text":"使用windows linux subsystem遇到的一些问题在更换了电脑之后自然想用新电脑作为主力开发工具，博客之类的环境也自然要更换到新电脑上面来，旧电脑只装了Ubuntu，新电脑用Windows+WSL作为开发工具。 中文设置修改/etc/default/locale文件，将其修改为如下内容 12LANG&#x3D;&#39;zh_CN&#39;LANGUAGE&#x3D;&#39;zh_CN:zh&#39; 更换python版本1sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python3 150 使用WLS和普通安装的ubuntu一样，你可以向往常使用ubuntu一样只用WLS比如使用WLS写博客，发布博客等等，唯一的区别是说到底WLS还是一个精简的Linux，你不能指望在WLS上跑TensorFlow之类的大型程序。 安装nnodejs和npm和在普通的Linux上一样，但是微软官方文档不建议直接使用apt-get install nodejs这个命令直接安装nodejs，原因是这个太老了，在接下来使用npm的时候会遇到很多问题，比如权限不够之类的。这里使用官方推荐的安装方式nvm来安装 官方教程链接 执行脚本: 1curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.4&#x2F;install.sh | bash 更新环境变量: 1source ~&#x2F;.profile 列出所有nodejs版本:nvm ls-remote 列出所有的nodejs版本 安装最新的nodejs版本 1nvm install 版本号 下载安装最新的LTSnodejs 安装最新的nodejs 安装好后你会发现npm同样也安装好了，剩下的操作就和以前一样了。 安装过程中会有一些警告，不必理会，这是提示你安装的模块不属于你的系统版本，这不会影响的。","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://windowsxp002.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"linux","slug":"linux","permalink":"https://windowsxp002.github.io/tags/linux/"}]},{"title":"Github搜索技巧","slug":"Github搜索技巧","date":"2020-01-09T09:28:31.000Z","updated":"2020-01-09T09:33:26.000Z","comments":true,"path":"2020/01/09/Github搜索技巧/","link":"","permalink":"https://windowsxp002.github.io/2020/01/09/Github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/","excerpt":"记录一下自己经常使用的GItHub搜索技巧，以后还会更新","text":"记录一下自己经常使用的GItHub搜索技巧，以后还会更新 在名字里面搜索顾名思义就是准确的搜索名字中包含相关内容的项目： in:name 在描述里面搜索搜索在在deacription中出现的内容： in:deacriptionstars限制过滤掉一些Starts少的项目： stras:&gt;||&lt;||=在readme里搜索搜索出现在Readme文档中的项目 in:readme暂时想到这些，以后如果有再加吧！！","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"github","slug":"github","permalink":"https://windowsxp002.github.io/tags/github/"},{"name":"笔记","slug":"笔记","permalink":"https://windowsxp002.github.io/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"linux常用设置","slug":"linux常用设置","date":"2020-01-06T09:00:00.000Z","updated":"2020-01-09T08:54:06.000Z","comments":true,"path":"2020/01/06/linux常用设置/","link":"","permalink":"https://windowsxp002.github.io/2020/01/06/linux%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/","excerpt":"linux常用设置这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。","text":"linux常用设置这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。 1、点击图标最小化1gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize' 2、linux v2rayhttps://github.com/xbblog95/v2sub.git https://v2sub.betac1ouds.top/modules/servers/V2raySocks/osubscribe.php?sid=2679&amp;token=acECX4eA8xgg3、切换默认Python版本sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1504、scrcpy手机无线投屏工具，也可以USB链接5、peekGIF录制工具6、sudo nautilusnautilus linux文件管理工具7、efibootmgr无效，需要禁用Windowsefi启动项否则会重置启动项8、双系统时间问题sudo hwclock --localtime --systohc9、grub 主题grub 主题下载 1）下载grub主题去这里 主题下载下载自己喜欢的grub主题，下载下来后是一个压缩包。解压下载下来的压缩包，假设解压出来的目录名字叫A，A中包含了所有的文件。 2）将主题文件放到指定目录在/boot/grub目录中新建一个目录，名字叫themes将目录A拷贝到新建的目录。打开目录A，里边有一个文件，文件名叫theme.txt，记下这个文件的路径，后边有用。 3)修改grub的主题设置修改文件/etc/grub.d/00_header,在# along with GRUB. If not, see &lt;http://www.gnu.org/licenses/&gt;.这行注释下边加上一句话，这句话是：GRUB_THEME=theme文件的路径注意这句话不能加在最后边，否则就不管用了,执行命令：update-grub完成 10、安装Numix图标123 sudo add-apt-repository ppa:numix/ppasudo apt-get updatesudo apt-get install numix-gtk-theme numix-icon-theme-circle 123sudo add-apt-repository ppa:papirus/papirussudo apt-get updatesudo apt-get install papirus-icon-theme 11 、vacode终端字体间距过大去文件-首选项-设置里修改terminal.integrated.fontFamily vscode终端 12、安装unrar1sudo apt-get install rar unrar","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://windowsxp002.github.io/tags/linux/"},{"name":"笔记","slug":"笔记","permalink":"https://windowsxp002.github.io/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"Hexo使用技巧","slug":"Hexo使用技巧","date":"2020-01-05T05:51:59.000Z","updated":"2020-01-06T09:39:31.000Z","comments":true,"path":"2020/01/05/Hexo使用技巧/","link":"","permalink":"https://windowsxp002.github.io/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/","excerpt":"Hexo使用技巧在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。","text":"Hexo使用技巧在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。 摘要问题使用&lt;!--more--&gt;标签即可设置摘要，将该标签放置在摘要和正文之间，在Hexo预览的时候就能够显示摘要内容 图片问题前一篇文章中提到了使用图床来事文章显示图片的方法，但其实这种方法是过于麻烦的，首先你需要获得 图片的链接，然后将该图片插入等你写的MarkDown文章中，好处在于你全部的图片都是存放在GIthub一个项目中的，坏处就是所有文章图片都在一起，没办法管理。Hexo提供了MarkDown文章插入图片的方法。 插入图片准备工作执行 12npm install hexo-asset-image --savecnpm install hexo-asset-image --save//如果你安装了cnpm的话 然后在_config.yml文件中把post_asset_folder: true设置为True此时如果执行 1hexo n 新文章名称 就会看到除了创建了一片新文章之外，还有一个和新文章名称一致的文件夹，这个文件夹就能够放置一些和该篇文章相关的图片。 生成的md文件和文件夹 MarkDown插入图片插入图片的语句就是MarkDown标准的插入图片的语句 1![图片描述](文章文件夹&#x2F;要插入的图片名称.png) 标签及分类问题标签和分类在博客中显示的效果大概如图所示 标签效果 开启标签和分类功能也很简单，bash中执行 12hexo new page tagshexo new page categories 即可以看见在source文件夹下生成了/tags、/categories文件夹然后修改scaffolds/post.md文件，设置每次创建的博客模板 123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories:--- 标签用法多标签tags: [标签1,标签2,标签3......] 效果 草稿新建草稿1$ hexo new draft 文章名字 执行完命令之后你会在source/_drafts找到你的草稿文章，Hexo 另外提供draft机制，它的原理是新文章将建立在source/_drafts 目录下，因此 hexo generate 并不会将其编译到 public目录下，所以hexo deploy也不会将其部署到 GitHub。 预览草稿1hexo S --draft 和hexo s一样访问http://localhost:4000/预览 将草稿发布为正式文章1$ hexo P &lt;filename&gt; 其中filename为不包含 md 后缀的文章名称。它的原理只是将文章从 source/_drafts移动到 source/_posts而已。之后的hexo generate 与 hexo deploy 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 source/_posts 目录移动到source/_drafts 目录即可。 坑点如果发现在网站上访问不了你的博客，比如我把仓库改成了私有的后发现怎么也访问不了了，改回公开仓库也不行，这里的解决方法就是删除文件夹下面的.deploy_git文件夹，再次上传部署就能够访问了，其实如果出现了404多半事Hexo本身的问题，在github方面出错不太可能，所以如果博客整个都崩了，那就把整个文件夹干掉重新来一遍就好了。","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://windowsxp002.github.io/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"https://windowsxp002.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"PicGo+Github搭建图床","slug":"使用Github搭建图床","date":"2020-01-04T05:20:55.000Z","updated":"2020-01-05T10:30:29.000Z","comments":true,"path":"2020/01/04/使用Github搭建图床/","link":"","permalink":"https://windowsxp002.github.io/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/","excerpt":"使用Github搭建图床使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。","text":"使用Github搭建图床使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。 前言搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片，这样文章就显得很枯燥，博客文章显得干干巴巴，因此在MarkDown中添加图片就成了一件不得不做的事 建一个GIthub仓库随便建立一个空的Git仓库 建立一个空仓库 获取仓库的token在Github的Developer setting界面生一个token，注意该Token只会显示一次，下次一旦刷新就会不见，所以务必保存好这个Token。 获得Token 设置PicGo在PicGo中的Github图床中设置好相应的参数。 设置PicGo 测试图片是否上传上传几张图片测试是否上传成功。 测试","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://windowsxp002.github.io/tags/Hexo/"},{"name":"github","slug":"github","permalink":"https://windowsxp002.github.io/tags/github/"},{"name":"图床","slug":"图床","permalink":"https://windowsxp002.github.io/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"Hexo+Github搭建博客","slug":"Hexo搭建博客","date":"2020-01-03T05:20:55.000Z","updated":"2020-01-05T05:23:58.000Z","comments":true,"path":"2020/01/03/Hexo搭建博客/","link":"","permalink":"https://windowsxp002.github.io/2020/01/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","excerpt":"Hexo+Github搭建博客使用Hexo+Github快速搭建个人博客","text":"Hexo+Github搭建博客使用Hexo+Github快速搭建个人博客 1、准备工作 安装node.js1sudo apt-get install nodejs 安装npm1sudo apt-get install npm 查看版本信息npm -v &amp;&amp;nodejs -v; 升级npmsudo npm -g npm; 再次确认版本信息npm -v &amp;&amp;nodejs -v，此时你可能会遇到显示升级了，但是查询版本信息的时候还是原来的版本的情况，不要慌，重新注销登入下就行了。 可选步骤由于npm源在国内访问比较比较忙，这样下载的时候就会很忙甚至出错，所以最好将npm的源换成国内的 方式一：安装cnpm cnpm是阿里定制的npm 命令行工具，安装命令 1sudo npm install -g cnpm --registry=https://registry.npm.taobao.org 方式二：设置npm镜像源如果你不想使用cnpm则使用 1npm config set registry https://registry.npm.taobao.org 再输入:把npm源换成国内的。 1npm config list 设置系统代理 github账号创建一个username.github.io的项目，注意username一定要是你github账户的名称，否则不行，这点很重要。 安装Hexo博客框架1sudo cnpm install -g hexo 初始化Hexo使用命令Hexo init 注意必须是空文件夹(不能有文件或者隐藏文件),期间会有警告,不用理会 测试使用命令hexo s启动Hexo访问http://localhost:4000/可以看见里面有一篇文章,并且有相关的教程 安装部署到github插件安装Github快速部署插件可以很方便的将你的Hexo博客部署到你的Github上面。 1npm install hexo-deployer-git --save 修改个人信息注意有多个_config.yml文件，Hexo有_config.yml，有一些主题还有_config.yml文件实在不同的文件夹下面的，首先修改Hexo目录下的_config.yml，把它里面的信息全部改成你自己的信息 title: 标题 subtitle: 副标题 description: 描写 keywords: &apos;关键字&apos; author: 作者 language: zh-CN语言 timezone: 时区(可不设置) # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo:改成你的git项目链接 branch:master ,也可以不指定进行测试shell中分别执行这些命令 123hexo chexo ghexo s 此时如果正确无误的话可以再访问http://localhost:4000/查看修改过后的信息有没有错误。 更换主题 主题推荐1安装教程 主题推荐2 Hexo主题排行榜 我这里用的是indigo这个主题,主题更换起来十分的方便,你可以在Hexo文件夹下的/Theme文件夹下使用多个主题,这样一旦你觉得那个主题看腻了,就能够很方便的更换（在config.yml配置文件下修改主题_）。更换主题后有一些主题设置需要修改，查看主题的配置文档就行了，很详细。 写文章 Hexo的文章全部采用MarkDown格式,如何使用markdown写博客参考MarkDown语法教程，比较简单，不懂的话就在这个网站看一看，相当于是一本字典，不懂就翻一翻。写好的文章放在source/_posts文件夹下面就可以了 最后确认 当你觉得差不多的时候后，进行确认，shell中分别执行这些命令访问http://localhost:4000/查看 123hexo chexo ghexo s 部署大功告成 执行 123hexo chexo g hexo d 按照要求输入github账号密码就能够部署成功了！！","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://windowsxp002.github.io/tags/Hexo/"},{"name":"linux","slug":"linux","permalink":"https://windowsxp002.github.io/tags/linux/"},{"name":"github","slug":"github","permalink":"https://windowsxp002.github.io/tags/github/"}]}]}