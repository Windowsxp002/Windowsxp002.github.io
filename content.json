{"meta":{"title":"咕哒子的博客","subtitle":"","description":"咕哒子的博客","author":"咕哒子","url":"https://windowsxp002.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-01-04T06:49:31.000Z","updated":"2020-01-04T06:49:58.409Z","comments":false,"path":"categories/index.html","permalink":"https://windowsxp002.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-01-04T06:48:23.000Z","updated":"2020-01-05T05:12:25.685Z","comments":false,"path":"tags/index.html","permalink":"https://windowsxp002.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Github搜索技巧","slug":"Github搜索技巧","date":"2020-01-09T09:28:31.000Z","updated":"2020-01-09T09:29:31.303Z","comments":true,"path":"2020/01/09/Github搜索技巧/","link":"","permalink":"https://windowsxp002.github.io/2020/01/09/Github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/","excerpt":"记录一下自己经常使用的GItHub搜索技巧，以后还会更新","text":"记录一下自己经常使用的GItHub搜索技巧，以后还会更新 在名字里面搜索顾名思义就是准确的搜索名字中包含相关内容的项目： 1234in:name &#96;&#96;&#96; ## 在描述里面搜索搜索在在&#96;deacription&#96;中出现的内容： in:deacription 12## stars限制过滤掉一些Starts少的项目： stras:&gt;||&lt;||= 12## 在readme里搜索搜索出现在Readme文档中的项目 in:readme 暂时想到这些，以后如果有再加吧！！","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://windowsxp002.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"github","slug":"github","permalink":"https://windowsxp002.github.io/tags/github/"}]},{"title":"linux常用设置","slug":"linux常用设置","date":"2020-01-06T09:00:00.000Z","updated":"2020-01-09T08:54:06.491Z","comments":true,"path":"2020/01/06/linux常用设置/","link":"","permalink":"https://windowsxp002.github.io/2020/01/06/linux%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/","excerpt":"linux常用设置这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。","text":"linux常用设置这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。 1、点击图标最小化1gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize' 2、linux v2rayhttps://github.com/xbblog95/v2sub.git https://v2sub.betac1ouds.top/modules/servers/V2raySocks/osubscribe.php?sid=2679&amp;token=acECX4eA8xgg3、切换默认Python版本sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1504、scrcpy手机无线投屏工具，也可以USB链接5、peekGIF录制工具6、sudo nautilusnautilus linux文件管理工具7、efibootmgr无效，需要禁用Windowsefi启动项否则会重置启动项8、双系统时间问题sudo hwclock --localtime --systohc9、grub 主题grub 主题下载 1）下载grub主题去这里 主题下载下载自己喜欢的grub主题，下载下来后是一个压缩包。解压下载下来的压缩包，假设解压出来的目录名字叫A，A中包含了所有的文件。 2）将主题文件放到指定目录在/boot/grub目录中新建一个目录，名字叫themes将目录A拷贝到新建的目录。打开目录A，里边有一个文件，文件名叫theme.txt，记下这个文件的路径，后边有用。 3)修改grub的主题设置修改文件/etc/grub.d/00_header,在# along with GRUB. If not, see &lt;http://www.gnu.org/licenses/&gt;.这行注释下边加上一句话，这句话是：GRUB_THEME=theme文件的路径注意这句话不能加在最后边，否则就不管用了,执行命令：update-grub完成 10、安装Numix图标123 sudo add-apt-repository ppa:numix/ppasudo apt-get updatesudo apt-get install numix-gtk-theme numix-icon-theme-circle 123sudo add-apt-repository ppa:papirus/papirussudo apt-get updatesudo apt-get install papirus-icon-theme 11 、vacode终端字体间距过大去文件-首选项-设置里修改terminal.integrated.fontFamily vscode终端 12、安装unrar1sudo apt-get install rar unrar","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://windowsxp002.github.io/tags/%E7%AC%94%E8%AE%B0/"},{"name":"linux","slug":"linux","permalink":"https://windowsxp002.github.io/tags/linux/"}]},{"title":"Hexo使用技巧","slug":"Hexo使用技巧","date":"2020-01-05T05:51:59.000Z","updated":"2020-01-06T09:39:31.541Z","comments":true,"path":"2020/01/05/Hexo使用技巧/","link":"","permalink":"https://windowsxp002.github.io/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/","excerpt":"Hexo使用技巧在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。","text":"Hexo使用技巧在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。 摘要问题使用&lt;!--more--&gt;标签即可设置摘要，将该标签放置在摘要和正文之间，在Hexo预览的时候就能够显示摘要内容 图片问题前一篇文章中提到了使用图床来事文章显示图片的方法，但其实这种方法是过于麻烦的，首先你需要获得 图片的链接，然后将该图片插入等你写的MarkDown文章中，好处在于你全部的图片都是存放在GIthub一个项目中的，坏处就是所有文章图片都在一起，没办法管理。Hexo提供了MarkDown文章插入图片的方法。 插入图片准备工作执行 12npm install hexo-asset-image --savecnpm install hexo-asset-image --save//如果你安装了cnpm的话 然后在_config.yml文件中把post_asset_folder: true设置为True此时如果执行 1hexo n 新文章名称 就会看到除了创建了一片新文章之外，还有一个和新文章名称一致的文件夹，这个文件夹就能够放置一些和该篇文章相关的图片。 生成的md文件和文件夹 MarkDown插入图片插入图片的语句就是MarkDown标准的插入图片的语句 1![图片描述](文章文件夹&#x2F;要插入的图片名称.png) 标签及分类问题标签和分类在博客中显示的效果大概如图所示 标签效果 开启标签和分类功能也很简单，bash中执行 12hexo new page tagshexo new page categories 即可以看见在source文件夹下生成了/tags、/categories文件夹然后修改scaffolds/post.md文件，设置每次创建的博客模板 123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories:--- 标签用法多标签tags: [标签1,标签2,标签3......] 效果 草稿新建草稿1$ hexo new draft 文章名字 执行完命令之后你会在source/_drafts找到你的草稿文章，Hexo 另外提供draft机制，它的原理是新文章将建立在source/_drafts 目录下，因此 hexo generate 并不会将其编译到 public目录下，所以hexo deploy也不会将其部署到 GitHub。 预览草稿1hexo S --draft 和hexo s一样访问http://localhost:4000/预览 将草稿发布为正式文章1$ hexo P &lt;filename&gt; 其中filename为不包含 md 后缀的文章名称。它的原理只是将文章从 source/_drafts移动到 source/_posts而已。之后的hexo generate 与 hexo deploy 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 source/_posts 目录移动到source/_drafts 目录即可。 坑点如果发现在网站上访问不了你的博客，比如我把仓库改成了私有的后发现怎么也访问不了了，改回公开仓库也不行，这里的解决方法就是删除文件夹下面的.deploy_git文件夹，再次上传部署就能够访问了，其实如果出现了404多半事Hexo本身的问题，在github方面出错不太可能，所以如果博客整个都崩了，那就把整个文件夹干掉重新来一遍就好了。","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://windowsxp002.github.io/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"https://windowsxp002.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"PicGo+Github搭建图床","slug":"使用Github搭建图床","date":"2020-01-04T05:20:55.000Z","updated":"2020-01-05T10:30:29.139Z","comments":true,"path":"2020/01/04/使用Github搭建图床/","link":"","permalink":"https://windowsxp002.github.io/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/","excerpt":"使用Github搭建图床使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。","text":"使用Github搭建图床使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。 前言搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片，这样文章就显得很枯燥，博客文章显得干干巴巴，因此在MarkDown中添加图片就成了一件不得不做的事 建一个GIthub仓库随便建立一个空的Git仓库 建立一个空仓库 获取仓库的token在Github的Developer setting界面生一个token，注意该Token只会显示一次，下次一旦刷新就会不见，所以务必保存好这个Token。 获得Token 设置PicGo在PicGo中的Github图床中设置好相应的参数。 设置PicGo 测试图片是否上传上传几张图片测试是否上传成功。 测试","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"github","slug":"github","permalink":"https://windowsxp002.github.io/tags/github/"},{"name":"Hexo","slug":"Hexo","permalink":"https://windowsxp002.github.io/tags/Hexo/"},{"name":"图床","slug":"图床","permalink":"https://windowsxp002.github.io/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"Hexo+Github搭建博客","slug":"Hexo搭建博客","date":"2020-01-03T05:20:55.000Z","updated":"2020-01-05T05:23:58.406Z","comments":true,"path":"2020/01/03/Hexo搭建博客/","link":"","permalink":"https://windowsxp002.github.io/2020/01/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","excerpt":"Hexo+Github搭建博客使用Hexo+Github快速搭建个人博客","text":"Hexo+Github搭建博客使用Hexo+Github快速搭建个人博客 1、准备工作 安装node.js1sudo apt-get install nodejs 安装npm1sudo apt-get install npm 查看版本信息npm -v &amp;&amp;nodejs -v; 升级npmsudo npm -g npm; 再次确认版本信息npm -v &amp;&amp;nodejs -v，此时你可能会遇到显示升级了，但是查询版本信息的时候还是原来的版本的情况，不要慌，重新注销登入下就行了。 可选步骤由于npm源在国内访问比较比较忙，这样下载的时候就会很忙甚至出错，所以最好将npm的源换成国内的 方式一：安装cnpm cnpm是阿里定制的npm 命令行工具，安装命令 1sudo npm install -g cnpm --registry=https://registry.npm.taobao.org 方式二：设置npm镜像源如果你不想使用cnpm则使用 1npm config set registry https://registry.npm.taobao.org 再输入:把npm源换成国内的。 1npm config list 设置系统代理 github账号创建一个username.github.io的项目，注意username一定要是你github账户的名称，否则不行，这点很重要。 安装Hexo博客框架1sudo cnpm install -g hexo 初始化Hexo使用命令Hexo init 注意必须是空文件夹(不能有文件或者隐藏文件),期间会有警告,不用理会 测试使用命令hexo s启动Hexo访问http://localhost:4000/可以看见里面有一篇文章,并且有相关的教程 安装部署到github插件安装Github快速部署插件可以很方便的将你的Hexo博客部署到你的Github上面。 1npm install hexo-deployer-git --save 修改个人信息注意有多个_config.yml文件，Hexo有_config.yml，有一些主题还有_config.yml文件实在不同的文件夹下面的，首先修改Hexo目录下的_config.yml，把它里面的信息全部改成你自己的信息 title: 标题 subtitle: 副标题 description: 描写 keywords: &apos;关键字&apos; author: 作者 language: zh-CN语言 timezone: 时区(可不设置) # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo:改成你的git项目链接 branch:master ,也可以不指定进行测试shell中分别执行这些命令 123hexo chexo ghexo s 此时如果正确无误的话可以再访问http://localhost:4000/查看修改过后的信息有没有错误。 更换主题 主题推荐1安装教程 主题推荐2 Hexo主题排行榜 我这里用的是indigo这个主题,主题更换起来十分的方便,你可以在Hexo文件夹下的/Theme文件夹下使用多个主题,这样一旦你觉得那个主题看腻了,就能够很方便的更换（在config.yml配置文件下修改主题_）。更换主题后有一些主题设置需要修改，查看主题的配置文档就行了，很详细。 写文章 Hexo的文章全部采用MarkDown格式,如何使用markdown写博客参考MarkDown语法教程，比较简单，不懂的话就在这个网站看一看，相当于是一本字典，不懂就翻一翻。写好的文章放在source/_posts文件夹下面就可以了 最后确认 当你觉得差不多的时候后，进行确认，shell中分别执行这些命令访问http://localhost:4000/查看 123hexo chexo ghexo s 部署大功告成 执行 123hexo chexo g hexo d 按照要求输入github账号密码就能够部署成功了！！","categories":[{"name":"杂项","slug":"杂项","permalink":"https://windowsxp002.github.io/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"github","slug":"github","permalink":"https://windowsxp002.github.io/tags/github/"},{"name":"Hexo","slug":"Hexo","permalink":"https://windowsxp002.github.io/tags/Hexo/"},{"name":"linux","slug":"linux","permalink":"https://windowsxp002.github.io/tags/linux/"}]}]}