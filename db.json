{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/头像.jpg","path":"img/头像.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1578120359000},{"_id":"themes/indigo/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1578120359000},{"_id":"themes/indigo/README.md","hash":"4bf26d9b43bf24b8e0a1a0d058437a347972f5e6","modified":1578120359000},{"_id":"themes/indigo/_config.yml","hash":"f23dbbb2447696b1bdea582ebec03d356100235b","modified":1578309432000},{"_id":"themes/indigo/_config（复件）.ymlbak","hash":"00f1a1fa5c4c885397a4d78c26141f7f1296f21c","modified":1578120359000},{"_id":"themes/indigo/package.json","hash":"c795e3100ae3655bfa8b39adcca7333a7925b47f","modified":1578120359000},{"_id":"source/_posts/Github搜索技巧.md","hash":"623a0972750ff0fa749e5b7ede503bff2675952a","modified":1578562406000},{"_id":"source/_posts/Hexo使用技巧.md","hash":"d3235cca9c1cc6059a177c119bee8bbf2238f9c2","modified":1578303571000},{"_id":"source/_posts/Hexo搭建博客.md","hash":"73ebd17258f04db5aaeff14682faa22a42dba3f3","modified":1578201838000},{"_id":"source/_posts/linux常用设置.md","hash":"da284b9c96a57111fb95cc663eec42ed3c5c6595","modified":1578560046000},{"_id":"source/_posts/wsl遇到的坑.md","hash":"4062fc14dedd94501942e04accf604cdf6f6f33d","modified":1581496058996},{"_id":"source/_posts/使用Github搭建图床.md","hash":"a89c89de882f7a2b3186614ee3016148d7581730","modified":1578220229000},{"_id":"source/categories/index.md","hash":"15d68633499db2b0e1f3f0173b63b63c31fbeac7","modified":1578120598000},{"_id":"themes/indigo/languages/en.yml","hash":"1957d2bfc3a4cef299f4f169b431e9b1128ba162","modified":1578120359000},{"_id":"themes/indigo/languages/ja.yml","hash":"74fd480874bf5e773ba7f9d2a94697cda979091f","modified":1578120359000},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"7dc6ae434dde390b6768d244132e23cc78c33817","modified":1578120359000},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1578120359000},{"_id":"themes/indigo/languages/nl-NL","hash":"9085c04491f93066f2369911cc2175b59ae596ad","modified":1578120359000},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1578120359000},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1578120359000},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1578120359000},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1578120359000},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1578120359000},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1578120359000},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1578120359000},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1578120359000},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1578120359000},{"_id":"source/tags/index.md","hash":"9f16faa819d9fc36ca9a80c407bf21371c68707a","modified":1578201145000},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1578120359000},{"_id":"source/_posts/Hexo使用技巧/2020-01-05_17-21.png","hash":"ac977203a21e727061a8b0dfa113fbaa873883d9","modified":1578216084000},{"_id":"source/_posts/Hexo使用技巧/2020-01-05_18-32.png","hash":"8c8f69e5b661b0ceb28469bbbeeff1be7b086849","modified":1578220358000},{"_id":"source/_posts/Hexo使用技巧/2020-01-05_17-24.png","hash":"872a5d14d98358b0a5f84f5020c9212579d3ee77","modified":1578216282000},{"_id":"source/_posts/wsl遇到的坑/下载安装最新的LTSnodejs.png","hash":"ae49be53e4378b21507a03c2487f5d34ee68fb77","modified":1581496058999},{"_id":"source/_posts/使用Github搭建图床/PicGo设置.png","hash":"2b2664e44ac372ae6a12ef968806ee586c7e3d3e","modified":1578142185000},{"_id":"source/_posts/linux常用设置/2020-01-05_21-00.png","hash":"7a16c9815c9f1c71c00b9fe881c17ed10c9b4232","modified":1578301200000},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"e1a71a30a1c7a664ddf3ba3e7eb3a5b90bc4b33c","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"02a95a88774cc50dbcc32242b6c8ac7e9d9028bb","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"6156bf20791e46fc1c5872113276c1c1f5c13773","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"ec7b3ec79bbbead9c7e43e2e6c6b5c8bef509410","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"d39afaad6b0dd2a3ae27e6db3e9a6cd6014622fa","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"a87d9b0485b3bf4cdfdad890e5974c43dbaa8240","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"7e06d1c3ecf964a0a31e811d2c4935e084c6ad5c","modified":1578120359000},{"_id":"themes/indigo/source/css/style.less","hash":"f22d4146e0bdb4485d33f20080c67ba05724afea","modified":1578120359000},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1578120359000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1578120359000},{"_id":"themes/indigo/source/img/favicon.ico","hash":"bc24eff41c9d8654ddd8457489dc6cb6e531fdbc","modified":1578303914000},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1578120359000},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1578120359000},{"_id":"themes/indigo/source/js/main.js","hash":"300b2e963683ced162e28afcd24ffc970fc23ac2","modified":1578120359000},{"_id":"themes/indigo/source/js/main.min.js","hash":"8acf4480f8ab859423b8926b9b790c67b5a77276","modified":1578120359000},{"_id":"themes/indigo/source/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1578120359000},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1578120359000},{"_id":"source/_posts/wsl遇到的坑/Snipaste_2020-01-23_14-01-22.png","hash":"8d2ed91f8df3eca0386fa0ed72e1f6f97d323e75","modified":1581496058999},{"_id":"source/_posts/使用Github搭建图床/创建一个新仓库.png","hash":"97246b4662f5ef8339a25ff441efc9b45de99680","modified":1578125433000},{"_id":"source/_posts/使用Github搭建图床/生成token.png","hash":"8a045032906702a2bed40d0a779bd92fe2f57bd2","modified":1578141907000},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"288eea15aa92b63b8f0cfa523c8111aed3d0f4b7","modified":1578125018000},{"_id":"themes/indigo/source/img/头像.jpg","hash":"a40b6405fd432489d9083d4c00f0f26b44101ce0","modified":1578053977000},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"23c101d45911eb0846533aaa2d409c43aa5e899a","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5723d507eca4390e8e5d18c0770e7953b8c22f5a","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/gitalk.ejs","hash":"bcf792a5633151fd999319fd91cf477e6860ae9c","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/hyper-comments.ejs","hash":"e5a83acc7c2e385b0c9abf428e86e8fdfd3a5202","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"a976ca36bd09aeb2902bf94fcc7a59975ea25148","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"8fbd0910828f1ab6eba728bdecc9811d623baae2","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"21530a1bc362d286d08dbce0baf37d09d7c58c92","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"5305ed30ee35cf50f87656737d0ffe85f5bfc16b","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"23719e09689b3afbb19214c6603eb02f896cb9ba","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1578120359000},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"ad287a70724eb7cd8cd2a03a45b68032ee99973d","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"d476cd3537bcd8a02d055cc223f5c805b8638cc2","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"90f0948a9182c14b1dac1e9dbed3c883543266f9","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"4390ed22abad59c8b28ed1a479a52f15b5f9cf4a","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"4857f90bb57fc22ca3f942d8934d86d5e9e82c1e","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"1c041bf91106808e5480c60d9ece45431bb503b3","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1578120359000},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"ddbb7647d83f732f9b0d5d817d40a748006949cc","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"082896b966ed25b39c74e7b007b4f54c235685a4","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1578120359000},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1578120359000},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"524e0cf5e81c2f9da8d5fe3ba95144f1a7a0df33","modified":1578125065000},{"_id":"source/_posts/使用Github搭建图床/上传成功.png","hash":"6d4e47809c26e6638eab9aff6b195670f6235b91","modified":1578143398000},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"ca30b732d2efbb0cd55a272ecdabc97f895aee78","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1578120359000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1578120359000},{"_id":"public/atom.xml","hash":"0a2e07b27039f8cf5a6a387f9abca55f9866f7b0","modified":1581496087383},{"_id":"public/content.json","hash":"daca1856c170aa598b88ce2cd81c63ca1746e42a","modified":1581496087383},{"_id":"public/tags/笔记/index.html","hash":"3736e2095bb3cb67449c84ff1c5c43b410bf003c","modified":1581496087383},{"_id":"public/tags/github/index.html","hash":"3b428ca851bd655868254f7798689965e5a8cf33","modified":1581496087383},{"_id":"public/tags/linux/index.html","hash":"dee48aafa2a3e25ea76113e2a40a4d95f5901722","modified":1581496087383},{"_id":"public/tags/博客/index.html","hash":"90a866aee9ede7e8c21aac1b48fce9fc1ceab9ee","modified":1581496087383},{"_id":"public/tags/Hexo/index.html","hash":"2793935e8969056e30a45695048d1fcb450cc3dd","modified":1581496087383},{"_id":"public/tags/图床/index.html","hash":"f28913006159c38f4e46bc783f50eb5acec46e53","modified":1581496087383},{"_id":"public/categories/index.html","hash":"02cea3d7edbb1c02c05bd90754afe40277c83858","modified":1581496087383},{"_id":"public/tags/index.html","hash":"12de74e734a05c5f41a17925eaa522747b190db7","modified":1581496087383},{"_id":"public/2020/01/23/wsl遇到的坑/index.html","hash":"8852ed2e171b062a10df049ea910f44bb3835a08","modified":1581496087383},{"_id":"public/2020/01/09/Github搜索技巧/index.html","hash":"4d48c1ad640ed7b0878d9daf978585244e1055fe","modified":1581496087383},{"_id":"public/2020/01/06/linux常用设置/index.html","hash":"9c46f3c37986e612c1a20ed47f02a4d9f9d8afab","modified":1581496087383},{"_id":"public/2020/01/05/Hexo使用技巧/index.html","hash":"b0bff9c642276d68abca0ea6b9b622728742248c","modified":1581496087383},{"_id":"public/2020/01/04/使用Github搭建图床/index.html","hash":"506b9e6cda13f779c00e6cd942909b2b875eeaeb","modified":1581496087383},{"_id":"public/2020/01/03/Hexo搭建博客/index.html","hash":"dc1ed652d7ee2ba0b5223d9972149b08c091ab1f","modified":1581496087383},{"_id":"public/index.html","hash":"3a31bb79ade6d8d06edd32ef7bd48954638664d2","modified":1581496087383},{"_id":"public/categories/杂项/index.html","hash":"440d13faae24ae5363e9c93c5d3bf2f152fe0ce3","modified":1581496087383},{"_id":"public/archives/index.html","hash":"585661a09dd86a68ab0885ea08601318616e52c0","modified":1581496087383},{"_id":"public/archives/2020/index.html","hash":"48ac7347767389913ad96bb9ba219436a40207cf","modified":1581496087383},{"_id":"public/archives/2020/01/index.html","hash":"4363d59182e7525586a6bdf7129558644262b2dd","modified":1581496087383},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1581496087383},{"_id":"public/img/favicon.ico","hash":"bc24eff41c9d8654ddd8457489dc6cb6e531fdbc","modified":1581496087383},{"_id":"public/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1581496087383},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1581496087383},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1581496087383},{"_id":"public/img/头像.jpg","hash":"a40b6405fd432489d9083d4c00f0f26b44101ce0","modified":1581496087383},{"_id":"public/img/alipay.jpg","hash":"288eea15aa92b63b8f0cfa523c8111aed3d0f4b7","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1581496087383},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1581496087383},{"_id":"public/2020/01/06/linux常用设置/2020-01-05_21-00.png","hash":"7a16c9815c9f1c71c00b9fe881c17ed10c9b4232","modified":1581496087383},{"_id":"public/2020/01/23/wsl遇到的坑/下载安装最新的LTSnodejs.png","hash":"ae49be53e4378b21507a03c2487f5d34ee68fb77","modified":1581496087383},{"_id":"public/2020/01/23/wsl遇到的坑/Snipaste_2020-01-23_14-01-22.png","hash":"8d2ed91f8df3eca0386fa0ed72e1f6f97d323e75","modified":1581496087383},{"_id":"public/2020/01/05/Hexo使用技巧/2020-01-05_17-21.png","hash":"ac977203a21e727061a8b0dfa113fbaa873883d9","modified":1581496087383},{"_id":"public/2020/01/05/Hexo使用技巧/2020-01-05_17-24.png","hash":"872a5d14d98358b0a5f84f5020c9212579d3ee77","modified":1581496087383},{"_id":"public/2020/01/05/Hexo使用技巧/2020-01-05_18-32.png","hash":"8c8f69e5b661b0ceb28469bbbeeff1be7b086849","modified":1581496087383},{"_id":"public/2020/01/04/使用Github搭建图床/PicGo设置.png","hash":"2b2664e44ac372ae6a12ef968806ee586c7e3d3e","modified":1581496087383},{"_id":"public/js/main.min.js","hash":"8acf4480f8ab859423b8926b9b790c67b5a77276","modified":1581496087383},{"_id":"public/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1581496087383},{"_id":"public/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1581496087383},{"_id":"public/js/main.js","hash":"300b2e963683ced162e28afcd24ffc970fc23ac2","modified":1581496087383},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1581496087383},{"_id":"public/img/wechat.jpg","hash":"524e0cf5e81c2f9da8d5fe3ba95144f1a7a0df33","modified":1581496087383},{"_id":"public/2020/01/04/使用Github搭建图床/生成token.png","hash":"8a045032906702a2bed40d0a779bd92fe2f57bd2","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1581496087383},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1581496087383},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1581496087383},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1581496087383},{"_id":"public/2020/01/04/使用Github搭建图床/上传成功.png","hash":"6d4e47809c26e6638eab9aff6b195670f6235b91","modified":1581496087383},{"_id":"public/2020/01/04/使用Github搭建图床/创建一个新仓库.png","hash":"97246b4662f5ef8339a25ff441efc9b45de99680","modified":1581496087383},{"_id":"public/css/style.css","hash":"4f59712181405c963fe7e80740071022050bc096","modified":1581496087383},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1581496087383},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1581496087383}],"Category":[{"name":"杂项","_id":"ck6j1xs460003bsuobcx77w70"}],"Data":[],"Page":[{"title":"categories","date":"2020-01-04T06:49:31.000Z","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-01-04 14:49:31\nlayout: categories\ncomments: false\n---\n","updated":"2020-01-04T06:49:58.000Z","path":"categories/index.html","_id":"ck6j1xs3t0001bsuo4icc5e1g","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-01-04T06:48:23.000Z","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-01-04 14:48:23\nlayout: tags\ncomments: false\n---\n","updated":"2020-01-05T05:12:25.000Z","path":"tags/index.html","_id":"ck6j1xs4v0017bsuodwp53kn9","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Github搜索技巧","date":"2020-01-09T09:28:31.000Z","_content":"\n记录一下自己经常使用的GItHub搜索技巧，以后还会更新\n<!--more-->\n## 在名字里面搜索\n顾名思义就是准确的搜索名字中包含相关内容的项目：\n    \n    in:name \n\n## 在描述里面搜索\n搜索在在`deacription`中出现的内容：\n\n    in:deacription\n## stars限制\n过滤掉一些Starts少的项目：   \n\n    stras:>||<||=\n## 在readme里搜索\n搜索出现在Readme文档中的项目\n\n    in:readme\n暂时想到这些，以后如果有再加吧！！\n","source":"_posts/Github搜索技巧.md","raw":"---\ntitle: Github搜索技巧\ntags:\n  - 笔记\n  - github\ndate: 2020-01-09 17:28:31\ncategories: 杂项\n---\n\n记录一下自己经常使用的GItHub搜索技巧，以后还会更新\n<!--more-->\n## 在名字里面搜索\n顾名思义就是准确的搜索名字中包含相关内容的项目：\n    \n    in:name \n\n## 在描述里面搜索\n搜索在在`deacription`中出现的内容：\n\n    in:deacription\n## stars限制\n过滤掉一些Starts少的项目：   \n\n    stras:>||<||=\n## 在readme里搜索\n搜索出现在Readme文档中的项目\n\n    in:readme\n暂时想到这些，以后如果有再加吧！！\n","slug":"Github搜索技巧","published":1,"updated":"2020-01-09T09:33:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6j1xs3m0000bsuodqex1g2f","content":"<p>记录一下自己经常使用的GItHub搜索技巧，以后还会更新</p>\n<a id=\"more\"></a>\n<h2 id=\"在名字里面搜索\"><a href=\"#在名字里面搜索\" class=\"headerlink\" title=\"在名字里面搜索\"></a>在名字里面搜索</h2><p>顾名思义就是准确的搜索名字中包含相关内容的项目：</p>\n<pre><code>in:name </code></pre><h2 id=\"在描述里面搜索\"><a href=\"#在描述里面搜索\" class=\"headerlink\" title=\"在描述里面搜索\"></a>在描述里面搜索</h2><p>搜索在在<code>deacription</code>中出现的内容：</p>\n<pre><code>in:deacription</code></pre><h2 id=\"stars限制\"><a href=\"#stars限制\" class=\"headerlink\" title=\"stars限制\"></a>stars限制</h2><p>过滤掉一些Starts少的项目：   </p>\n<pre><code>stras:&gt;||&lt;||=</code></pre><h2 id=\"在readme里搜索\"><a href=\"#在readme里搜索\" class=\"headerlink\" title=\"在readme里搜索\"></a>在readme里搜索</h2><p>搜索出现在Readme文档中的项目</p>\n<pre><code>in:readme</code></pre><p>暂时想到这些，以后如果有再加吧！！</p>\n","site":{"data":{}},"excerpt":"<p>记录一下自己经常使用的GItHub搜索技巧，以后还会更新</p>","more":"<h2 id=\"在名字里面搜索\"><a href=\"#在名字里面搜索\" class=\"headerlink\" title=\"在名字里面搜索\"></a>在名字里面搜索</h2><p>顾名思义就是准确的搜索名字中包含相关内容的项目：</p>\n<pre><code>in:name </code></pre><h2 id=\"在描述里面搜索\"><a href=\"#在描述里面搜索\" class=\"headerlink\" title=\"在描述里面搜索\"></a>在描述里面搜索</h2><p>搜索在在<code>deacription</code>中出现的内容：</p>\n<pre><code>in:deacription</code></pre><h2 id=\"stars限制\"><a href=\"#stars限制\" class=\"headerlink\" title=\"stars限制\"></a>stars限制</h2><p>过滤掉一些Starts少的项目：   </p>\n<pre><code>stras:&gt;||&lt;||=</code></pre><h2 id=\"在readme里搜索\"><a href=\"#在readme里搜索\" class=\"headerlink\" title=\"在readme里搜索\"></a>在readme里搜索</h2><p>搜索出现在Readme文档中的项目</p>\n<pre><code>in:readme</code></pre><p>暂时想到这些，以后如果有再加吧！！</p>"},{"title":"wsl遇到的坑","date":"2020-01-23T05:51:59.000Z","_content":"\n# 使用windows linux subsystem遇到的一些问题\n\n在更换了电脑之后自然想用新电脑作为主力开发工具，博客之类的环境也自然要更换到新电脑上面来，旧电脑只装了Ubuntu，新电脑用Windows+WSL作为开发工具。\n\n<!--more-->\n\n\n## 中文设置\n\n修改`/etc/default/locale文件`，将其修改为如下内容\n\n```\nLANG='zh_CN'\nLANGUAGE='zh_CN:zh'\n```\n\n## 更换python版本\n\n```\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150\n```\n\n## 使用WLS\n\n和普通安装的ubuntu一样，你可以向往常使用ubuntu一样只用WLS比如使用WLS写博客，发布博客等等，唯一的区别是说到底WLS还是一个精简的Linux，你不能指望在WLS上跑`TensorFlow`之类的大型程序。\n\n### 安装`nnodejs`和`npm`\n\n和在普通的Linux上一样，但是微软官方文档不建议直接使用`apt-get install nodejs`这个命令直接安装`nodejs`，原因是这个太老了，在接下来使用`npm`的时候会遇到很多问题，比如权限不够之类的。这里使用官方推荐的安装方式`nvm`来安装\n\n[官方教程链接](https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2)\n\n- 执行脚本:\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash\n```\n\n- 更新环境变量:\n\n```\nsource ~/.profile\n```\n\n- 列出所有`nodejs`版本:`nvm ls-remote`\n\n  ![列出所有的版本](wsl遇到的坑\\Snipaste_2020-01-23_14-01-22.png)\n\n  列出所有的`nodejs`版本\n\n- 安装最新的`nodejs`版本\n\n```\nnvm install 版本号\n```\n\n![下载安装最新的LTSnodejs](wsl遇到的坑/下载安装最新的LTSnodejs.png)\n\n安装最新的`nodejs`\n\n安装好后你会发现`npm`同样也安装好了，剩下的操作就和以前一样了。\n\n安装过程中会有一些警告，不必理会，这是提示你安装的模块不属于你的系统版本，这不会影响的。","source":"_posts/wsl遇到的坑.md","raw":"---\ntitle: wsl遇到的坑\ntags:\n  - linux\n  - 博客\ncategories: 杂项\ndate: 2020-01-23 13:51:59\n---\n\n# 使用windows linux subsystem遇到的一些问题\n\n在更换了电脑之后自然想用新电脑作为主力开发工具，博客之类的环境也自然要更换到新电脑上面来，旧电脑只装了Ubuntu，新电脑用Windows+WSL作为开发工具。\n\n<!--more-->\n\n\n## 中文设置\n\n修改`/etc/default/locale文件`，将其修改为如下内容\n\n```\nLANG='zh_CN'\nLANGUAGE='zh_CN:zh'\n```\n\n## 更换python版本\n\n```\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150\n```\n\n## 使用WLS\n\n和普通安装的ubuntu一样，你可以向往常使用ubuntu一样只用WLS比如使用WLS写博客，发布博客等等，唯一的区别是说到底WLS还是一个精简的Linux，你不能指望在WLS上跑`TensorFlow`之类的大型程序。\n\n### 安装`nnodejs`和`npm`\n\n和在普通的Linux上一样，但是微软官方文档不建议直接使用`apt-get install nodejs`这个命令直接安装`nodejs`，原因是这个太老了，在接下来使用`npm`的时候会遇到很多问题，比如权限不够之类的。这里使用官方推荐的安装方式`nvm`来安装\n\n[官方教程链接](https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2)\n\n- 执行脚本:\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash\n```\n\n- 更新环境变量:\n\n```\nsource ~/.profile\n```\n\n- 列出所有`nodejs`版本:`nvm ls-remote`\n\n  ![列出所有的版本](wsl遇到的坑\\Snipaste_2020-01-23_14-01-22.png)\n\n  列出所有的`nodejs`版本\n\n- 安装最新的`nodejs`版本\n\n```\nnvm install 版本号\n```\n\n![下载安装最新的LTSnodejs](wsl遇到的坑/下载安装最新的LTSnodejs.png)\n\n安装最新的`nodejs`\n\n安装好后你会发现`npm`同样也安装好了，剩下的操作就和以前一样了。\n\n安装过程中会有一些警告，不必理会，这是提示你安装的模块不属于你的系统版本，这不会影响的。","slug":"wsl遇到的坑","published":1,"updated":"2020-02-12T08:27:38.996Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6j1xs3u0002bsuo7tnxhi6r","content":"<h1 id=\"使用windows-linux-subsystem遇到的一些问题\"><a href=\"#使用windows-linux-subsystem遇到的一些问题\" class=\"headerlink\" title=\"使用windows linux subsystem遇到的一些问题\"></a>使用windows linux subsystem遇到的一些问题</h1><p>在更换了电脑之后自然想用新电脑作为主力开发工具，博客之类的环境也自然要更换到新电脑上面来，旧电脑只装了Ubuntu，新电脑用Windows+WSL作为开发工具。</p>\n<a id=\"more\"></a>\n\n\n<h2 id=\"中文设置\"><a href=\"#中文设置\" class=\"headerlink\" title=\"中文设置\"></a>中文设置</h2><p>修改<code>/etc/default/locale文件</code>，将其修改为如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LANG&#x3D;&#39;zh_CN&#39;</span><br><span class=\"line\">LANGUAGE&#x3D;&#39;zh_CN:zh&#39;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更换python版本\"><a href=\"#更换python版本\" class=\"headerlink\" title=\"更换python版本\"></a>更换python版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python3 150</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用WLS\"><a href=\"#使用WLS\" class=\"headerlink\" title=\"使用WLS\"></a>使用WLS</h2><p>和普通安装的ubuntu一样，你可以向往常使用ubuntu一样只用WLS比如使用WLS写博客，发布博客等等，唯一的区别是说到底WLS还是一个精简的Linux，你不能指望在WLS上跑<code>TensorFlow</code>之类的大型程序。</p>\n<h3 id=\"安装nnodejs和npm\"><a href=\"#安装nnodejs和npm\" class=\"headerlink\" title=\"安装nnodejs和npm\"></a>安装<code>nnodejs</code>和<code>npm</code></h3><p>和在普通的Linux上一样，但是微软官方文档不建议直接使用<code>apt-get install nodejs</code>这个命令直接安装<code>nodejs</code>，原因是这个太老了，在接下来使用<code>npm</code>的时候会遇到很多问题，比如权限不够之类的。这里使用官方推荐的安装方式<code>nvm</code>来安装</p>\n<p><a href=\"https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2\" target=\"_blank\" rel=\"noopener\">官方教程链接</a></p>\n<ul>\n<li>执行脚本:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.4&#x2F;install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更新环境变量:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~&#x2F;.profile</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>列出所有<code>nodejs</code>版本:<code>nvm ls-remote</code></p>\n<p><img src=\"/2020/01/23/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%5CSnipaste_2020-01-23_14-01-22.png\" alt=\"列出所有的版本\"></p>\n<p>列出所有的<code>nodejs</code>版本</p>\n</li>\n<li><p>安装最新的<code>nodejs</code>版本</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 版本号</span><br></pre></td></tr></table></figure>\n\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/23/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/下载安装最新的LTSnodejs.png\" alt=\"下载安装最新的LTSnodejs\" title>\n                </div>\n                <div class=\"image-caption\">下载安装最新的LTSnodejs</div>\n            </figure>\n\n<p>安装最新的<code>nodejs</code></p>\n<p>安装好后你会发现<code>npm</code>同样也安装好了，剩下的操作就和以前一样了。</p>\n<p>安装过程中会有一些警告，不必理会，这是提示你安装的模块不属于你的系统版本，这不会影响的。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"使用windows-linux-subsystem遇到的一些问题\"><a href=\"#使用windows-linux-subsystem遇到的一些问题\" class=\"headerlink\" title=\"使用windows linux subsystem遇到的一些问题\"></a>使用windows linux subsystem遇到的一些问题</h1><p>在更换了电脑之后自然想用新电脑作为主力开发工具，博客之类的环境也自然要更换到新电脑上面来，旧电脑只装了Ubuntu，新电脑用Windows+WSL作为开发工具。</p>","more":"<h2 id=\"中文设置\"><a href=\"#中文设置\" class=\"headerlink\" title=\"中文设置\"></a>中文设置</h2><p>修改<code>/etc/default/locale文件</code>，将其修改为如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LANG&#x3D;&#39;zh_CN&#39;</span><br><span class=\"line\">LANGUAGE&#x3D;&#39;zh_CN:zh&#39;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更换python版本\"><a href=\"#更换python版本\" class=\"headerlink\" title=\"更换python版本\"></a>更换python版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python3 150</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用WLS\"><a href=\"#使用WLS\" class=\"headerlink\" title=\"使用WLS\"></a>使用WLS</h2><p>和普通安装的ubuntu一样，你可以向往常使用ubuntu一样只用WLS比如使用WLS写博客，发布博客等等，唯一的区别是说到底WLS还是一个精简的Linux，你不能指望在WLS上跑<code>TensorFlow</code>之类的大型程序。</p>\n<h3 id=\"安装nnodejs和npm\"><a href=\"#安装nnodejs和npm\" class=\"headerlink\" title=\"安装nnodejs和npm\"></a>安装<code>nnodejs</code>和<code>npm</code></h3><p>和在普通的Linux上一样，但是微软官方文档不建议直接使用<code>apt-get install nodejs</code>这个命令直接安装<code>nodejs</code>，原因是这个太老了，在接下来使用<code>npm</code>的时候会遇到很多问题，比如权限不够之类的。这里使用官方推荐的安装方式<code>nvm</code>来安装</p>\n<p><a href=\"https://docs.microsoft.com/en-us/windows/nodejs/setup-on-wsl2\" target=\"_blank\" rel=\"noopener\">官方教程链接</a></p>\n<ul>\n<li>执行脚本:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.4&#x2F;install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>更新环境变量:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~&#x2F;.profile</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>列出所有<code>nodejs</code>版本:<code>nvm ls-remote</code></p>\n<p><img src=\"/2020/01/23/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%5CSnipaste_2020-01-23_14-01-22.png\" alt=\"列出所有的版本\"></p>\n<p>列出所有的<code>nodejs</code>版本</p>\n</li>\n<li><p>安装最新的<code>nodejs</code>版本</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 版本号</span><br></pre></td></tr></table></figure>\n\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/23/wsl%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/下载安装最新的LTSnodejs.png\" alt=\"下载安装最新的LTSnodejs\" title>\n                </div>\n                <div class=\"image-caption\">下载安装最新的LTSnodejs</div>\n            </figure>\n\n<p>安装最新的<code>nodejs</code></p>\n<p>安装好后你会发现<code>npm</code>同样也安装好了，剩下的操作就和以前一样了。</p>\n<p>安装过程中会有一些警告，不必理会，这是提示你安装的模块不属于你的系统版本，这不会影响的。</p>"},{"title":"PicGo+Github搭建图床","date":"2020-01-04T05:20:55.000Z","_content":"# 使用Github搭建图床\n\n使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。\n<!-- more -->\n## 前言\n搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片，这样文章就显得很枯燥，博客文章显得干干巴巴，因此在MarkDown中添加图片就成了一件不得不做的事\n## 建一个GIthub仓库\n随便建立一个空的Git仓库\n![建立一个空仓库](使用Github搭建图床/创建一个新仓库.png)\n## 获取仓库的token\n在Github的Developer setting界面生一个token，注意该Token只会显示一次，下次一旦刷新就会不见，所以务必保存好这个Token。\n![获得Token](使用Github搭建图床/生成token.png)\n## 设置PicGo\n在PicGo中的Github图床中设置好相应的参数。\n![设置PicGo](使用Github搭建图床/PicGo设置.png)\n## 测试图片是否上传\n上传几张图片测试是否上传成功。\n![测试](使用Github搭建图床/上传成功.png)","source":"_posts/使用Github搭建图床.md","raw":"---\ntitle: PicGo+Github搭建图床\ndate: 2020-01-04 13:20:55\ntags: [Hexo,  github, 图床]\ncategories: 杂项\n---\n# 使用Github搭建图床\n\n使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。\n<!-- more -->\n## 前言\n搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片，这样文章就显得很枯燥，博客文章显得干干巴巴，因此在MarkDown中添加图片就成了一件不得不做的事\n## 建一个GIthub仓库\n随便建立一个空的Git仓库\n![建立一个空仓库](使用Github搭建图床/创建一个新仓库.png)\n## 获取仓库的token\n在Github的Developer setting界面生一个token，注意该Token只会显示一次，下次一旦刷新就会不见，所以务必保存好这个Token。\n![获得Token](使用Github搭建图床/生成token.png)\n## 设置PicGo\n在PicGo中的Github图床中设置好相应的参数。\n![设置PicGo](使用Github搭建图床/PicGo设置.png)\n## 测试图片是否上传\n上传几张图片测试是否上传成功。\n![测试](使用Github搭建图床/上传成功.png)","slug":"使用Github搭建图床","published":1,"updated":"2020-01-05T10:30:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6j1xs480005bsuoejjod3gt","content":"<h1 id=\"使用Github搭建图床\"><a href=\"#使用Github搭建图床\" class=\"headerlink\" title=\"使用Github搭建图床\"></a>使用Github搭建图床</h1><p>使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。</p>\n<a id=\"more\"></a>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片，这样文章就显得很枯燥，博客文章显得干干巴巴，因此在MarkDown中添加图片就成了一件不得不做的事</p>\n<h2 id=\"建一个GIthub仓库\"><a href=\"#建一个GIthub仓库\" class=\"headerlink\" title=\"建一个GIthub仓库\"></a>建一个GIthub仓库</h2><p>随便建立一个空的Git仓库</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/创建一个新仓库.png\" alt=\"建立一个空仓库\" title>\n                </div>\n                <div class=\"image-caption\">建立一个空仓库</div>\n            </figure>\n<h2 id=\"获取仓库的token\"><a href=\"#获取仓库的token\" class=\"headerlink\" title=\"获取仓库的token\"></a>获取仓库的token</h2><p>在Github的Developer setting界面生一个token，注意该Token只会显示一次，下次一旦刷新就会不见，所以务必保存好这个Token。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/生成token.png\" alt=\"获得Token\" title>\n                </div>\n                <div class=\"image-caption\">获得Token</div>\n            </figure>\n<h2 id=\"设置PicGo\"><a href=\"#设置PicGo\" class=\"headerlink\" title=\"设置PicGo\"></a>设置PicGo</h2><p>在PicGo中的Github图床中设置好相应的参数。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/PicGo设置.png\" alt=\"设置PicGo\" title>\n                </div>\n                <div class=\"image-caption\">设置PicGo</div>\n            </figure>\n<h2 id=\"测试图片是否上传\"><a href=\"#测试图片是否上传\" class=\"headerlink\" title=\"测试图片是否上传\"></a>测试图片是否上传</h2><p>上传几张图片测试是否上传成功。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/上传成功.png\" alt=\"测试\" title>\n                </div>\n                <div class=\"image-caption\">测试</div>\n            </figure>","site":{"data":{}},"excerpt":"<h1 id=\"使用Github搭建图床\"><a href=\"#使用Github搭建图床\" class=\"headerlink\" title=\"使用Github搭建图床\"></a>使用Github搭建图床</h1><p>使用Github+PicGo方便快捷地搭建属于自己的图床。搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片这样文章就显得很枯燥。</p>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>搭建好博客后总是想写些什么，但是一看自己以前写的东西，总觉得缺点什么，没错就是图片，在我的第一篇博客中，自己虽然每个过程都有截图，但是由于种种原因，自己并没有在MarkDown中添加任何图片，这样文章就显得很枯燥，博客文章显得干干巴巴，因此在MarkDown中添加图片就成了一件不得不做的事</p>\n<h2 id=\"建一个GIthub仓库\"><a href=\"#建一个GIthub仓库\" class=\"headerlink\" title=\"建一个GIthub仓库\"></a>建一个GIthub仓库</h2><p>随便建立一个空的Git仓库</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/创建一个新仓库.png\" alt=\"建立一个空仓库\" title>\n                </div>\n                <div class=\"image-caption\">建立一个空仓库</div>\n            </figure>\n<h2 id=\"获取仓库的token\"><a href=\"#获取仓库的token\" class=\"headerlink\" title=\"获取仓库的token\"></a>获取仓库的token</h2><p>在Github的Developer setting界面生一个token，注意该Token只会显示一次，下次一旦刷新就会不见，所以务必保存好这个Token。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/生成token.png\" alt=\"获得Token\" title>\n                </div>\n                <div class=\"image-caption\">获得Token</div>\n            </figure>\n<h2 id=\"设置PicGo\"><a href=\"#设置PicGo\" class=\"headerlink\" title=\"设置PicGo\"></a>设置PicGo</h2><p>在PicGo中的Github图床中设置好相应的参数。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/PicGo设置.png\" alt=\"设置PicGo\" title>\n                </div>\n                <div class=\"image-caption\">设置PicGo</div>\n            </figure>\n<h2 id=\"测试图片是否上传\"><a href=\"#测试图片是否上传\" class=\"headerlink\" title=\"测试图片是否上传\"></a>测试图片是否上传</h2><p>上传几张图片测试是否上传成功。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/04/%E4%BD%BF%E7%94%A8Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/上传成功.png\" alt=\"测试\" title>\n                </div>\n                <div class=\"image-caption\">测试</div>\n            </figure>"},{"title":"linux常用设置","date":"2020-01-06T09:00:00.000Z","_content":"\n# linux常用设置\n这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。\n<!--more-->\n## 1、点击图标最小化    \n```bash\ngsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'\n```\n## 2、linux v2ray\n    https://github.com/xbblog95/v2sub.git\n    https://v2sub.betac1ouds.top/modules/servers/V2raySocks/osubscribe.php?sid=2679&token=acECX4eA8xgg\n## 3、切换默认Python版本\n    sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150\n## 4、scrcpy\n    手机无线投屏工具，也可以USB链接\n## 5、peek\n    GIF录制工具\n## 6、sudo nautilus \n    nautilus linux文件管理工具\n## 7、efibootmgr\n    无效，需要禁用Windowsefi启动项否则会重置启动项\n## 8、双系统时间问题\n    sudo hwclock --localtime --systohc\n## 9、grub 主题\n[grub 主题下载](https://blog.csdn.net/Sacredness/article/details/86354020)\n### 1）下载grub主题\n去这里   [主题下载]( https://www.gnome-look.org/browse/cat/109/)下载自己喜欢的grub主题，下载下来后是一个压缩包。解压下载下来的压缩包，假设解压出来的目录名字叫A，A中包含了所有的文件。\n\n### 2）将主题文件放到指定目录\n在`/boot/grub`目录中新建一个目录，名字叫`themes`\n将目录A拷贝到新建的目录。\n打开目录A，里边有一个文件，文件名叫`theme.txt`，记下这个文件的路径，后边有用。\n\n### 3)修改grub的主题设置\n修改文件`/etc/grub.d/00_header`,在`# along with GRUB. If not, see <http://www.gnu.org/licenses/>`.这行注释下边加上一句话，这句话是：GRUB_THEME=theme文件的路径注意这句话不能加在最后边，否则就不管用了,执行命令：`update-grub`完成\n## 10、安装Numix图标\n```bash\n    sudo add-apt-repository ppa:numix/ppa\n\tsudo apt-get update\n\tsudo apt-get install numix-gtk-theme numix-icon-theme-circle    \n```\n```bash\n\tsudo add-apt-repository ppa:papirus/papirus\n\tsudo apt-get update\n\tsudo apt-get install papirus-icon-theme\n```\n## 11 、vacode终端字体间距过大\n去文件-首选项-设置里修改`terminal.integrated.fontFamily`\n![vscode终端](linux常用设置/2020-01-05_21-00.png)\n## 12、安装unrar\n```bash\nsudo apt-get install rar unrar\n```","source":"_posts/linux常用设置.md","raw":"---\ntitle: linux常用设置\ntags:\n  - linux\n  - 笔记\ncategories: 杂项\ndate: 2020-01-06 17:00:00\n---\n\n# linux常用设置\n这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。\n<!--more-->\n## 1、点击图标最小化    \n```bash\ngsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'\n```\n## 2、linux v2ray\n    https://github.com/xbblog95/v2sub.git\n    https://v2sub.betac1ouds.top/modules/servers/V2raySocks/osubscribe.php?sid=2679&token=acECX4eA8xgg\n## 3、切换默认Python版本\n    sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150\n## 4、scrcpy\n    手机无线投屏工具，也可以USB链接\n## 5、peek\n    GIF录制工具\n## 6、sudo nautilus \n    nautilus linux文件管理工具\n## 7、efibootmgr\n    无效，需要禁用Windowsefi启动项否则会重置启动项\n## 8、双系统时间问题\n    sudo hwclock --localtime --systohc\n## 9、grub 主题\n[grub 主题下载](https://blog.csdn.net/Sacredness/article/details/86354020)\n### 1）下载grub主题\n去这里   [主题下载]( https://www.gnome-look.org/browse/cat/109/)下载自己喜欢的grub主题，下载下来后是一个压缩包。解压下载下来的压缩包，假设解压出来的目录名字叫A，A中包含了所有的文件。\n\n### 2）将主题文件放到指定目录\n在`/boot/grub`目录中新建一个目录，名字叫`themes`\n将目录A拷贝到新建的目录。\n打开目录A，里边有一个文件，文件名叫`theme.txt`，记下这个文件的路径，后边有用。\n\n### 3)修改grub的主题设置\n修改文件`/etc/grub.d/00_header`,在`# along with GRUB. If not, see <http://www.gnu.org/licenses/>`.这行注释下边加上一句话，这句话是：GRUB_THEME=theme文件的路径注意这句话不能加在最后边，否则就不管用了,执行命令：`update-grub`完成\n## 10、安装Numix图标\n```bash\n    sudo add-apt-repository ppa:numix/ppa\n\tsudo apt-get update\n\tsudo apt-get install numix-gtk-theme numix-icon-theme-circle    \n```\n```bash\n\tsudo add-apt-repository ppa:papirus/papirus\n\tsudo apt-get update\n\tsudo apt-get install papirus-icon-theme\n```\n## 11 、vacode终端字体间距过大\n去文件-首选项-设置里修改`terminal.integrated.fontFamily`\n![vscode终端](linux常用设置/2020-01-05_21-00.png)\n## 12、安装unrar\n```bash\nsudo apt-get install rar unrar\n```","slug":"linux常用设置","published":1,"updated":"2020-01-09T08:54:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6j1xs4a0006bsuo30sh3emo","content":"<h1 id=\"linux常用设置\"><a href=\"#linux常用设置\" class=\"headerlink\" title=\"linux常用设置\"></a>linux常用设置</h1><p>这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。</p>\n<a id=\"more\"></a>\n<h2 id=\"1、点击图标最小化\"><a href=\"#1、点击图标最小化\" class=\"headerlink\" title=\"1、点击图标最小化\"></a>1、点击图标最小化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.shell.extensions.dash-to-dock click-action <span class=\"string\">'minimize'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2、linux-v2ray\"><a href=\"#2、linux-v2ray\" class=\"headerlink\" title=\"2、linux v2ray\"></a>2、linux v2ray</h2><pre><code>https://github.com/xbblog95/v2sub.git\nhttps://v2sub.betac1ouds.top/modules/servers/V2raySocks/osubscribe.php?sid=2679&amp;token=acECX4eA8xgg</code></pre><h2 id=\"3、切换默认Python版本\"><a href=\"#3、切换默认Python版本\" class=\"headerlink\" title=\"3、切换默认Python版本\"></a>3、切换默认Python版本</h2><pre><code>sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150</code></pre><h2 id=\"4、scrcpy\"><a href=\"#4、scrcpy\" class=\"headerlink\" title=\"4、scrcpy\"></a>4、scrcpy</h2><pre><code>手机无线投屏工具，也可以USB链接</code></pre><h2 id=\"5、peek\"><a href=\"#5、peek\" class=\"headerlink\" title=\"5、peek\"></a>5、peek</h2><pre><code>GIF录制工具</code></pre><h2 id=\"6、sudo-nautilus\"><a href=\"#6、sudo-nautilus\" class=\"headerlink\" title=\"6、sudo nautilus\"></a>6、sudo nautilus</h2><pre><code>nautilus linux文件管理工具</code></pre><h2 id=\"7、efibootmgr\"><a href=\"#7、efibootmgr\" class=\"headerlink\" title=\"7、efibootmgr\"></a>7、efibootmgr</h2><pre><code>无效，需要禁用Windowsefi启动项否则会重置启动项</code></pre><h2 id=\"8、双系统时间问题\"><a href=\"#8、双系统时间问题\" class=\"headerlink\" title=\"8、双系统时间问题\"></a>8、双系统时间问题</h2><pre><code>sudo hwclock --localtime --systohc</code></pre><h2 id=\"9、grub-主题\"><a href=\"#9、grub-主题\" class=\"headerlink\" title=\"9、grub 主题\"></a>9、grub 主题</h2><p><a href=\"https://blog.csdn.net/Sacredness/article/details/86354020\" target=\"_blank\" rel=\"noopener\">grub 主题下载</a></p>\n<h3 id=\"1）下载grub主题\"><a href=\"#1）下载grub主题\" class=\"headerlink\" title=\"1）下载grub主题\"></a>1）下载grub主题</h3><p>去这里   <a href=\"https://www.gnome-look.org/browse/cat/109/\" target=\"_blank\" rel=\"noopener\">主题下载</a>下载自己喜欢的grub主题，下载下来后是一个压缩包。解压下载下来的压缩包，假设解压出来的目录名字叫A，A中包含了所有的文件。</p>\n<h3 id=\"2）将主题文件放到指定目录\"><a href=\"#2）将主题文件放到指定目录\" class=\"headerlink\" title=\"2）将主题文件放到指定目录\"></a>2）将主题文件放到指定目录</h3><p>在<code>/boot/grub</code>目录中新建一个目录，名字叫<code>themes</code><br>将目录A拷贝到新建的目录。<br>打开目录A，里边有一个文件，文件名叫<code>theme.txt</code>，记下这个文件的路径，后边有用。</p>\n<h3 id=\"3-修改grub的主题设置\"><a href=\"#3-修改grub的主题设置\" class=\"headerlink\" title=\"3)修改grub的主题设置\"></a>3)修改grub的主题设置</h3><p>修改文件<code>/etc/grub.d/00_header</code>,在<code># along with GRUB. If not, see &lt;http://www.gnu.org/licenses/&gt;</code>.这行注释下边加上一句话，这句话是：GRUB_THEME=theme文件的路径注意这句话不能加在最后边，否则就不管用了,执行命令：<code>update-grub</code>完成</p>\n<h2 id=\"10、安装Numix图标\"><a href=\"#10、安装Numix图标\" class=\"headerlink\" title=\"10、安装Numix图标\"></a>10、安装Numix图标</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   sudo add-apt-repository ppa:numix/ppa</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install numix-gtk-theme numix-icon-theme-circle</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:papirus/papirus</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install papirus-icon-theme</span><br></pre></td></tr></table></figure>\n<h2 id=\"11-、vacode终端字体间距过大\"><a href=\"#11-、vacode终端字体间距过大\" class=\"headerlink\" title=\"11 、vacode终端字体间距过大\"></a>11 、vacode终端字体间距过大</h2><p>去文件-首选项-设置里修改<code>terminal.integrated.fontFamily</code></p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/06/linux%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/2020-01-05_21-00.png\" alt=\"vscode终端\" title>\n                </div>\n                <div class=\"image-caption\">vscode终端</div>\n            </figure>\n<h2 id=\"12、安装unrar\"><a href=\"#12、安装unrar\" class=\"headerlink\" title=\"12、安装unrar\"></a>12、安装unrar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install rar unrar</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"linux常用设置\"><a href=\"#linux常用设置\" class=\"headerlink\" title=\"linux常用设置\"></a>linux常用设置</h1><p>这篇文章相当于是一个笔记，记录一下我每次安装完Linux(Gnome桌面环境下)必定会做的几件事情，防止自己遗忘，当然这篇文章并不是很全面，以后如果还有还会再修改的。</p>","more":"<h2 id=\"1、点击图标最小化\"><a href=\"#1、点击图标最小化\" class=\"headerlink\" title=\"1、点击图标最小化\"></a>1、点击图标最小化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.shell.extensions.dash-to-dock click-action <span class=\"string\">'minimize'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2、linux-v2ray\"><a href=\"#2、linux-v2ray\" class=\"headerlink\" title=\"2、linux v2ray\"></a>2、linux v2ray</h2><pre><code>https://github.com/xbblog95/v2sub.git\nhttps://v2sub.betac1ouds.top/modules/servers/V2raySocks/osubscribe.php?sid=2679&amp;token=acECX4eA8xgg</code></pre><h2 id=\"3、切换默认Python版本\"><a href=\"#3、切换默认Python版本\" class=\"headerlink\" title=\"3、切换默认Python版本\"></a>3、切换默认Python版本</h2><pre><code>sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150</code></pre><h2 id=\"4、scrcpy\"><a href=\"#4、scrcpy\" class=\"headerlink\" title=\"4、scrcpy\"></a>4、scrcpy</h2><pre><code>手机无线投屏工具，也可以USB链接</code></pre><h2 id=\"5、peek\"><a href=\"#5、peek\" class=\"headerlink\" title=\"5、peek\"></a>5、peek</h2><pre><code>GIF录制工具</code></pre><h2 id=\"6、sudo-nautilus\"><a href=\"#6、sudo-nautilus\" class=\"headerlink\" title=\"6、sudo nautilus\"></a>6、sudo nautilus</h2><pre><code>nautilus linux文件管理工具</code></pre><h2 id=\"7、efibootmgr\"><a href=\"#7、efibootmgr\" class=\"headerlink\" title=\"7、efibootmgr\"></a>7、efibootmgr</h2><pre><code>无效，需要禁用Windowsefi启动项否则会重置启动项</code></pre><h2 id=\"8、双系统时间问题\"><a href=\"#8、双系统时间问题\" class=\"headerlink\" title=\"8、双系统时间问题\"></a>8、双系统时间问题</h2><pre><code>sudo hwclock --localtime --systohc</code></pre><h2 id=\"9、grub-主题\"><a href=\"#9、grub-主题\" class=\"headerlink\" title=\"9、grub 主题\"></a>9、grub 主题</h2><p><a href=\"https://blog.csdn.net/Sacredness/article/details/86354020\" target=\"_blank\" rel=\"noopener\">grub 主题下载</a></p>\n<h3 id=\"1）下载grub主题\"><a href=\"#1）下载grub主题\" class=\"headerlink\" title=\"1）下载grub主题\"></a>1）下载grub主题</h3><p>去这里   <a href=\"https://www.gnome-look.org/browse/cat/109/\" target=\"_blank\" rel=\"noopener\">主题下载</a>下载自己喜欢的grub主题，下载下来后是一个压缩包。解压下载下来的压缩包，假设解压出来的目录名字叫A，A中包含了所有的文件。</p>\n<h3 id=\"2）将主题文件放到指定目录\"><a href=\"#2）将主题文件放到指定目录\" class=\"headerlink\" title=\"2）将主题文件放到指定目录\"></a>2）将主题文件放到指定目录</h3><p>在<code>/boot/grub</code>目录中新建一个目录，名字叫<code>themes</code><br>将目录A拷贝到新建的目录。<br>打开目录A，里边有一个文件，文件名叫<code>theme.txt</code>，记下这个文件的路径，后边有用。</p>\n<h3 id=\"3-修改grub的主题设置\"><a href=\"#3-修改grub的主题设置\" class=\"headerlink\" title=\"3)修改grub的主题设置\"></a>3)修改grub的主题设置</h3><p>修改文件<code>/etc/grub.d/00_header</code>,在<code># along with GRUB. If not, see &lt;http://www.gnu.org/licenses/&gt;</code>.这行注释下边加上一句话，这句话是：GRUB_THEME=theme文件的路径注意这句话不能加在最后边，否则就不管用了,执行命令：<code>update-grub</code>完成</p>\n<h2 id=\"10、安装Numix图标\"><a href=\"#10、安装Numix图标\" class=\"headerlink\" title=\"10、安装Numix图标\"></a>10、安装Numix图标</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   sudo add-apt-repository ppa:numix/ppa</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install numix-gtk-theme numix-icon-theme-circle</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:papirus/papirus</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install papirus-icon-theme</span><br></pre></td></tr></table></figure>\n<h2 id=\"11-、vacode终端字体间距过大\"><a href=\"#11-、vacode终端字体间距过大\" class=\"headerlink\" title=\"11 、vacode终端字体间距过大\"></a>11 、vacode终端字体间距过大</h2><p>去文件-首选项-设置里修改<code>terminal.integrated.fontFamily</code></p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/06/linux%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/2020-01-05_21-00.png\" alt=\"vscode终端\" title>\n                </div>\n                <div class=\"image-caption\">vscode终端</div>\n            </figure>\n<h2 id=\"12、安装unrar\"><a href=\"#12、安装unrar\" class=\"headerlink\" title=\"12、安装unrar\"></a>12、安装unrar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install rar unrar</span><br></pre></td></tr></table></figure>"},{"title":"Hexo+Github搭建博客","date":"2020-01-03T05:20:55.000Z","_content":"# Hexo+Github搭建博客\n\n使用Hexo+Github快速搭建个人博客\n<!-- more -->\n\n\n## 1、准备工作\n- 安装node.js\n```bash\nsudo apt-get install nodejs\n```\n- 安装npm\n```bash\nsudo apt-get install npm\n```\n\n+ 查看版本信息`npm -v` &&`nodejs -v`;\n+ 升级npm`sudo npm -g npm`;\n+ 再次确认版本信息`npm -v` &&`nodejs -v`，此时你可能会遇到显示升级了，但是查询版本信息的时候还是原来的版本的情况，不要慌，重新注销登入下就行了。\n\n- 可选步骤    \n由于npm源在国内访问比较比较忙，这样下载的时候就会很忙甚至出错，所以最好将npm的源换成国内的\n    - 方式一：安装cnpm    \n         cnpm是阿里定制的npm 命令行工具，安装命令\n        ```bash\n        sudo npm install -g cnpm --registry=https://registry.npm.taobao.org\n        ```\n    - 方式二：设置npm镜像源    \n    如果你不想使用cnpm则使用\n        ```bash\n        npm config set registry https://registry.npm.taobao.org\n        ```\n        再输入:把npm源换成国内的。\n        ```bash \n        npm config list\n        ```\n    \n    - 设置系统代理\n* github账号    \n创建一个`username.github.io`的项目，注意username一定要是你github账户的名称，否则不行，这点很重要。\n\n## 安装Hexo博客框架\n```bash\nsudo cnpm install -g hexo\n```\n### 初始化Hexo\n使用命令`Hexo init` 注意必须是空文件夹(不能有文件或者隐藏文件),期间会有警告,不用理会\n### 测试\n使用命令`hexo s`启动Hexo    \n访问<http://localhost:4000/>\n可以看见里面有一篇文章,并且有相关的教程\n\n\n## 安装部署到github插件\n安装Github快速部署插件可以很方便的将你的Hexo博客部署到你的Github上面。\n```bash\nnpm install hexo-deployer-git --save\n```\n## 修改个人信息\n注意有多个_config.yml文件，Hexo有_config.yml，有一些主题还有_config.yml文件实在不同的文件夹下面的，首先修改Hexo目录下的_config.yml，把它里面的信息全部改成你自己的信息\n\n    title: 标题\n    subtitle: 副标题\n    description: 描写\n    keywords: '关键字'\n    author:  作者\n    language: zh-CN语言\n    timezone: 时区(可不设置)\n    \n    \n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n    type: git\n    repo:改成你的git项目链接\n    branch:master  ,也可以不指定\n\n## 进行测试\nshell中分别执行这些命令\n```bash\n hexo c\n hexo g\n hexo s\n ```\n 此时如果正确无误的话可以再访问<http://localhost:4000/>查看修改过后的信息有没有错误。\n\n\n ## 更换主题\n >[主题推荐1](https://www.zhihu.com/question/24422335/answers/updated)\n >[安装教程](https://github.com/yscoder/hexo-theme-indigo/wiki)\n\n >[主题推荐2](https://blog.csdn.net/zgd826237710/article/details/99671027)   \n\n >[Hexo主题排行榜](https://www.hexothe.me/)    \n \n 我这里用的是indigo这个主题,主题更换起来十分的方便,你可以在Hexo文件夹下的/Theme文件夹下使用多个主题,这样一旦你觉得那个主题看腻了,就能够很方便的更换（_在_config.yml配置文件下修改主题_）。更换主题后有一些主题设置需要修改，查看主题的配置文档就行了，很详细。\n ## 写文章\n Hexo的文章全部采用MarkDown格式,如何使用markdown写博客参考[MarkDown语法教程](https://www.mdeditor.com/)，比较简单，不懂的话就在这个网站看一看，相当于是一本字典，不懂就翻一翻。写好的文章放在`source/_posts`文件夹下面就可以了\n\n ## 最后确认\n 当你觉得差不多的时候后，进行确认，shell中分别执行这些命令访问<http://localhost:4000/>查看\n```bash\n hexo c\n hexo g\n hexo s\n ```\n ## 部署大功告成\n 执行 \n ```bash\n hexo c\n hexo g \n hexo d\n ```\n 按照要求输入github账号密码就能够部署成功了！！","source":"_posts/Hexo搭建博客.md","raw":"---\ntitle: Hexo+Github搭建博客\ndate: 2020-01-03 13:20:55\ntags: [Hexo, linux,  github]\ncategories: 杂项\n---\n# Hexo+Github搭建博客\n\n使用Hexo+Github快速搭建个人博客\n<!-- more -->\n\n\n## 1、准备工作\n- 安装node.js\n```bash\nsudo apt-get install nodejs\n```\n- 安装npm\n```bash\nsudo apt-get install npm\n```\n\n+ 查看版本信息`npm -v` &&`nodejs -v`;\n+ 升级npm`sudo npm -g npm`;\n+ 再次确认版本信息`npm -v` &&`nodejs -v`，此时你可能会遇到显示升级了，但是查询版本信息的时候还是原来的版本的情况，不要慌，重新注销登入下就行了。\n\n- 可选步骤    \n由于npm源在国内访问比较比较忙，这样下载的时候就会很忙甚至出错，所以最好将npm的源换成国内的\n    - 方式一：安装cnpm    \n         cnpm是阿里定制的npm 命令行工具，安装命令\n        ```bash\n        sudo npm install -g cnpm --registry=https://registry.npm.taobao.org\n        ```\n    - 方式二：设置npm镜像源    \n    如果你不想使用cnpm则使用\n        ```bash\n        npm config set registry https://registry.npm.taobao.org\n        ```\n        再输入:把npm源换成国内的。\n        ```bash \n        npm config list\n        ```\n    \n    - 设置系统代理\n* github账号    \n创建一个`username.github.io`的项目，注意username一定要是你github账户的名称，否则不行，这点很重要。\n\n## 安装Hexo博客框架\n```bash\nsudo cnpm install -g hexo\n```\n### 初始化Hexo\n使用命令`Hexo init` 注意必须是空文件夹(不能有文件或者隐藏文件),期间会有警告,不用理会\n### 测试\n使用命令`hexo s`启动Hexo    \n访问<http://localhost:4000/>\n可以看见里面有一篇文章,并且有相关的教程\n\n\n## 安装部署到github插件\n安装Github快速部署插件可以很方便的将你的Hexo博客部署到你的Github上面。\n```bash\nnpm install hexo-deployer-git --save\n```\n## 修改个人信息\n注意有多个_config.yml文件，Hexo有_config.yml，有一些主题还有_config.yml文件实在不同的文件夹下面的，首先修改Hexo目录下的_config.yml，把它里面的信息全部改成你自己的信息\n\n    title: 标题\n    subtitle: 副标题\n    description: 描写\n    keywords: '关键字'\n    author:  作者\n    language: zh-CN语言\n    timezone: 时区(可不设置)\n    \n    \n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n    type: git\n    repo:改成你的git项目链接\n    branch:master  ,也可以不指定\n\n## 进行测试\nshell中分别执行这些命令\n```bash\n hexo c\n hexo g\n hexo s\n ```\n 此时如果正确无误的话可以再访问<http://localhost:4000/>查看修改过后的信息有没有错误。\n\n\n ## 更换主题\n >[主题推荐1](https://www.zhihu.com/question/24422335/answers/updated)\n >[安装教程](https://github.com/yscoder/hexo-theme-indigo/wiki)\n\n >[主题推荐2](https://blog.csdn.net/zgd826237710/article/details/99671027)   \n\n >[Hexo主题排行榜](https://www.hexothe.me/)    \n \n 我这里用的是indigo这个主题,主题更换起来十分的方便,你可以在Hexo文件夹下的/Theme文件夹下使用多个主题,这样一旦你觉得那个主题看腻了,就能够很方便的更换（_在_config.yml配置文件下修改主题_）。更换主题后有一些主题设置需要修改，查看主题的配置文档就行了，很详细。\n ## 写文章\n Hexo的文章全部采用MarkDown格式,如何使用markdown写博客参考[MarkDown语法教程](https://www.mdeditor.com/)，比较简单，不懂的话就在这个网站看一看，相当于是一本字典，不懂就翻一翻。写好的文章放在`source/_posts`文件夹下面就可以了\n\n ## 最后确认\n 当你觉得差不多的时候后，进行确认，shell中分别执行这些命令访问<http://localhost:4000/>查看\n```bash\n hexo c\n hexo g\n hexo s\n ```\n ## 部署大功告成\n 执行 \n ```bash\n hexo c\n hexo g \n hexo d\n ```\n 按照要求输入github账号密码就能够部署成功了！！","slug":"Hexo搭建博客","published":1,"updated":"2020-01-05T05:23:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6j1xs4b0007bsuoc880dlvt","content":"<h1 id=\"Hexo-Github搭建博客\"><a href=\"#Hexo-Github搭建博客\" class=\"headerlink\" title=\"Hexo+Github搭建博客\"></a>Hexo+Github搭建博客</h1><p>使用Hexo+Github快速搭建个人博客</p>\n<a id=\"more\"></a>\n\n\n<h2 id=\"1、准备工作\"><a href=\"#1、准备工作\" class=\"headerlink\" title=\"1、准备工作\"></a>1、准备工作</h2><ul>\n<li>安装node.js<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure></li>\n<li>安装npm<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install npm</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>查看版本信息<code>npm -v</code> &amp;&amp;<code>nodejs -v</code>;</li>\n<li>升级npm<code>sudo npm -g npm</code>;</li>\n<li>再次确认版本信息<code>npm -v</code> &amp;&amp;<code>nodejs -v</code>，此时你可能会遇到显示升级了，但是查询版本信息的时候还是原来的版本的情况，不要慌，重新注销登入下就行了。</li>\n</ul>\n<ul>\n<li><p>可选步骤<br>由于npm源在国内访问比较比较忙，这样下载的时候就会很忙甚至出错，所以最好将npm的源换成国内的</p>\n<ul>\n<li><p>方式一：安装cnpm<br>   cnpm是阿里定制的npm 命令行工具，安装命令</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li>\n<li><p>方式二：设置npm镜像源<br>如果你不想使用cnpm则使用</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>  再输入:把npm源换成国内的。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config list</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置系统代理</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>github账号<br>创建一个<code>username.github.io</code>的项目，注意username一定要是你github账户的名称，否则不行，这点很重要。</li>\n</ul>\n<h2 id=\"安装Hexo博客框架\"><a href=\"#安装Hexo博客框架\" class=\"headerlink\" title=\"安装Hexo博客框架\"></a>安装Hexo博客框架</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cnpm install -g hexo</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h3><p>使用命令<code>Hexo init</code> 注意必须是空文件夹(不能有文件或者隐藏文件),期间会有警告,不用理会</p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>使用命令<code>hexo s</code>启动Hexo<br>访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br>可以看见里面有一篇文章,并且有相关的教程</p>\n<h2 id=\"安装部署到github插件\"><a href=\"#安装部署到github插件\" class=\"headerlink\" title=\"安装部署到github插件\"></a>安装部署到github插件</h2><p>安装Github快速部署插件可以很方便的将你的Hexo博客部署到你的Github上面。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改个人信息\"><a href=\"#修改个人信息\" class=\"headerlink\" title=\"修改个人信息\"></a>修改个人信息</h2><p>注意有多个_config.yml文件，Hexo有_config.yml，有一些主题还有_config.yml文件实在不同的文件夹下面的，首先修改Hexo目录下的_config.yml，把它里面的信息全部改成你自己的信息</p>\n<pre><code>title: 标题\nsubtitle: 副标题\ndescription: 描写\nkeywords: &apos;关键字&apos;\nauthor:  作者\nlanguage: zh-CN语言\ntimezone: 时区(可不设置)\n\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\ntype: git\nrepo:改成你的git项目链接\nbranch:master  ,也可以不指定</code></pre><h2 id=\"进行测试\"><a href=\"#进行测试\" class=\"headerlink\" title=\"进行测试\"></a>进行测试</h2><p>shell中分别执行这些命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p> 此时如果正确无误的话可以再访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>查看修改过后的信息有没有错误。</p>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><blockquote>\n<p><a href=\"https://www.zhihu.com/question/24422335/answers/updated\" target=\"_blank\" rel=\"noopener\">主题推荐1</a><br><a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki\" target=\"_blank\" rel=\"noopener\">安装教程</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/zgd826237710/article/details/99671027\" target=\"_blank\" rel=\"noopener\">主题推荐2</a>   </p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.hexothe.me/\" target=\"_blank\" rel=\"noopener\">Hexo主题排行榜</a>    </p>\n</blockquote>\n<p> 我这里用的是indigo这个主题,主题更换起来十分的方便,你可以在Hexo文件夹下的/Theme文件夹下使用多个主题,这样一旦你觉得那个主题看腻了,就能够很方便的更换（<em>在</em>config.yml配置文件下修改主题_）。更换主题后有一些主题设置需要修改，查看主题的配置文档就行了，很详细。</p>\n<h2 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h2><p> Hexo的文章全部采用MarkDown格式,如何使用markdown写博客参考<a href=\"https://www.mdeditor.com/\" target=\"_blank\" rel=\"noopener\">MarkDown语法教程</a>，比较简单，不懂的话就在这个网站看一看，相当于是一本字典，不懂就翻一翻。写好的文章放在<code>source/_posts</code>文件夹下面就可以了</p>\n<h2 id=\"最后确认\"><a href=\"#最后确认\" class=\"headerlink\" title=\"最后确认\"></a>最后确认</h2><p> 当你觉得差不多的时候后，进行确认，shell中分别执行这些命令访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"部署大功告成\"><a href=\"#部署大功告成\" class=\"headerlink\" title=\"部署大功告成\"></a>部署大功告成</h2><p> 执行<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure><br> 按照要求输入github账号密码就能够部署成功了！！</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Hexo-Github搭建博客\"><a href=\"#Hexo-Github搭建博客\" class=\"headerlink\" title=\"Hexo+Github搭建博客\"></a>Hexo+Github搭建博客</h1><p>使用Hexo+Github快速搭建个人博客</p>","more":"<h2 id=\"1、准备工作\"><a href=\"#1、准备工作\" class=\"headerlink\" title=\"1、准备工作\"></a>1、准备工作</h2><ul>\n<li>安装node.js<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure></li>\n<li>安装npm<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install npm</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>查看版本信息<code>npm -v</code> &amp;&amp;<code>nodejs -v</code>;</li>\n<li>升级npm<code>sudo npm -g npm</code>;</li>\n<li>再次确认版本信息<code>npm -v</code> &amp;&amp;<code>nodejs -v</code>，此时你可能会遇到显示升级了，但是查询版本信息的时候还是原来的版本的情况，不要慌，重新注销登入下就行了。</li>\n</ul>\n<ul>\n<li><p>可选步骤<br>由于npm源在国内访问比较比较忙，这样下载的时候就会很忙甚至出错，所以最好将npm的源换成国内的</p>\n<ul>\n<li><p>方式一：安装cnpm<br>   cnpm是阿里定制的npm 命令行工具，安装命令</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li>\n<li><p>方式二：设置npm镜像源<br>如果你不想使用cnpm则使用</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>  再输入:把npm源换成国内的。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config list</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置系统代理</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>github账号<br>创建一个<code>username.github.io</code>的项目，注意username一定要是你github账户的名称，否则不行，这点很重要。</li>\n</ul>\n<h2 id=\"安装Hexo博客框架\"><a href=\"#安装Hexo博客框架\" class=\"headerlink\" title=\"安装Hexo博客框架\"></a>安装Hexo博客框架</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cnpm install -g hexo</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h3><p>使用命令<code>Hexo init</code> 注意必须是空文件夹(不能有文件或者隐藏文件),期间会有警告,不用理会</p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>使用命令<code>hexo s</code>启动Hexo<br>访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a><br>可以看见里面有一篇文章,并且有相关的教程</p>\n<h2 id=\"安装部署到github插件\"><a href=\"#安装部署到github插件\" class=\"headerlink\" title=\"安装部署到github插件\"></a>安装部署到github插件</h2><p>安装Github快速部署插件可以很方便的将你的Hexo博客部署到你的Github上面。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改个人信息\"><a href=\"#修改个人信息\" class=\"headerlink\" title=\"修改个人信息\"></a>修改个人信息</h2><p>注意有多个_config.yml文件，Hexo有_config.yml，有一些主题还有_config.yml文件实在不同的文件夹下面的，首先修改Hexo目录下的_config.yml，把它里面的信息全部改成你自己的信息</p>\n<pre><code>title: 标题\nsubtitle: 副标题\ndescription: 描写\nkeywords: &apos;关键字&apos;\nauthor:  作者\nlanguage: zh-CN语言\ntimezone: 时区(可不设置)\n\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\ntype: git\nrepo:改成你的git项目链接\nbranch:master  ,也可以不指定</code></pre><h2 id=\"进行测试\"><a href=\"#进行测试\" class=\"headerlink\" title=\"进行测试\"></a>进行测试</h2><p>shell中分别执行这些命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p> 此时如果正确无误的话可以再访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>查看修改过后的信息有没有错误。</p>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><blockquote>\n<p><a href=\"https://www.zhihu.com/question/24422335/answers/updated\" target=\"_blank\" rel=\"noopener\">主题推荐1</a><br><a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki\" target=\"_blank\" rel=\"noopener\">安装教程</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/zgd826237710/article/details/99671027\" target=\"_blank\" rel=\"noopener\">主题推荐2</a>   </p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.hexothe.me/\" target=\"_blank\" rel=\"noopener\">Hexo主题排行榜</a>    </p>\n</blockquote>\n<p> 我这里用的是indigo这个主题,主题更换起来十分的方便,你可以在Hexo文件夹下的/Theme文件夹下使用多个主题,这样一旦你觉得那个主题看腻了,就能够很方便的更换（<em>在</em>config.yml配置文件下修改主题_）。更换主题后有一些主题设置需要修改，查看主题的配置文档就行了，很详细。</p>\n<h2 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h2><p> Hexo的文章全部采用MarkDown格式,如何使用markdown写博客参考<a href=\"https://www.mdeditor.com/\" target=\"_blank\" rel=\"noopener\">MarkDown语法教程</a>，比较简单，不懂的话就在这个网站看一看，相当于是一本字典，不懂就翻一翻。写好的文章放在<code>source/_posts</code>文件夹下面就可以了</p>\n<h2 id=\"最后确认\"><a href=\"#最后确认\" class=\"headerlink\" title=\"最后确认\"></a>最后确认</h2><p> 当你觉得差不多的时候后，进行确认，shell中分别执行这些命令访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"部署大功告成\"><a href=\"#部署大功告成\" class=\"headerlink\" title=\"部署大功告成\"></a>部署大功告成</h2><p> 执行<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c</span><br><span class=\"line\">hexo g </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure><br> 按照要求输入github账号密码就能够部署成功了！！</p>"},{"title":"Hexo使用技巧","date":"2020-01-05T05:51:59.000Z","_content":"# Hexo使用技巧\n\n在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。\n\n<!--more-->\n\n## 摘要问题\n使用`<!--more-->`标签即可设置摘要，将该标签放置在摘要和正文之间，在Hexo预览的时候就能够显示摘要内容\n## 图片问题\n前一篇文章中提到了使用图床来事文章显示图片的方法，但其实这种方法是过于麻烦的，首先你需要获得 图片的链接，然后将该图片插入等你写的MarkDown文章中，好处在于你全部的图片都是存放在GIthub一个项目中的，坏处就是所有文章图片都在一起，没办法管理。Hexo提供了MarkDown文章插入图片的方法。\n### 插入图片准备工作\n执行\n```bash\nnpm install hexo-asset-image --save\ncnpm install hexo-asset-image --save//如果你安装了cnpm的话\n```\n然后在`_config.yml`文件中把`post_asset_folder: true`设置为True此时如果执行\n```bash\nhexo n 新文章名称\n```\n就会看到除了创建了一片新文章之外，还有一个和新文章名称一致的文件夹，这个文件夹就能够放置一些和该篇文章相关的图片。\n![生成的md文件和文件夹](Hexo使用技巧/2020-01-05_17-21.png)\n### MarkDown插入图片\n插入图片的语句就是MarkDown标准的插入图片的语句\n```\n![图片描述](文章文件夹/要插入的图片名称.png)\n```\n## 标签及分类问题\n标签和分类在博客中显示的效果大概如图所示\n![标签效果](Hexo使用技巧/2020-01-05_17-24.png)\n开启标签和分类功能也很简单，bash中执行\n```bash\nhexo new page tags\nhexo new page categories\n```\n即可以看见在source文件夹下生成了/tags、/categories文件夹\n然后修改`scaffolds/post.md`文件，设置每次创建的博客模板\n```\n---\ntitle: {{ title }}\ndate: {{ date }}\ntags:\ncategories:\n---\n```\n### 标签用法\n多标签`tags: [标签1,标签2,标签3......]`\n![效果](Hexo使用技巧/2020-01-05_18-32.png)\n\n### 草稿\n#### 新建草稿\n```bash\n$ hexo new draft  文章名字\n```\n执行完命令之后你会在`source/_drafts`找到你的草稿文章，Hexo 另外提供` draft `机制，它的原理是新文章将建立在` source/_drafts` 目录下，因此 `hexo generate` 并不会将其编译到 `public `目录下，所以` hexo deploy `也不会将其部署到 GitHub。\n#### 预览草稿\n```bash\n hexo S --draft\n```\n和`hexo s`一样访问<http://localhost:4000/>预览\n\n\n#### 将草稿发布为正式文章\n```bash\n$ hexo P <filename>\n```\n其中` filename`为不包含 `md` 后缀的文章名称。它的原理只是将文章从 `source/_drafts `移动到 `source/_posts `而已。之后的` hexo generate` 与 `hexo deploy` 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 `source/_posts` 目录移动到` source/_drafts` 目录即可。\n\n\n### 坑点\n如果发现在网站上访问不了你的博客，比如我把仓库改成了私有的后发现怎么也访问不了了，改回公开仓库也不行，这里的解决方法就是删除文件夹下面的`.deploy_git`文件夹，再次上传部署就能够访问了，其实如果出现了404多半事Hexo本身的问题，在github方面出错不太可能，所以如果博客整个都崩了，那就把整个文件夹干掉重新来一遍就好了。\n\n","source":"_posts/Hexo使用技巧.md","raw":"---\ntitle: Hexo使用技巧\ndate: 2020-01-05 13:51:59\ntags: [Hexo, 博客]\ncategories: 杂项\n---\n# Hexo使用技巧\n\n在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。\n\n<!--more-->\n\n## 摘要问题\n使用`<!--more-->`标签即可设置摘要，将该标签放置在摘要和正文之间，在Hexo预览的时候就能够显示摘要内容\n## 图片问题\n前一篇文章中提到了使用图床来事文章显示图片的方法，但其实这种方法是过于麻烦的，首先你需要获得 图片的链接，然后将该图片插入等你写的MarkDown文章中，好处在于你全部的图片都是存放在GIthub一个项目中的，坏处就是所有文章图片都在一起，没办法管理。Hexo提供了MarkDown文章插入图片的方法。\n### 插入图片准备工作\n执行\n```bash\nnpm install hexo-asset-image --save\ncnpm install hexo-asset-image --save//如果你安装了cnpm的话\n```\n然后在`_config.yml`文件中把`post_asset_folder: true`设置为True此时如果执行\n```bash\nhexo n 新文章名称\n```\n就会看到除了创建了一片新文章之外，还有一个和新文章名称一致的文件夹，这个文件夹就能够放置一些和该篇文章相关的图片。\n![生成的md文件和文件夹](Hexo使用技巧/2020-01-05_17-21.png)\n### MarkDown插入图片\n插入图片的语句就是MarkDown标准的插入图片的语句\n```\n![图片描述](文章文件夹/要插入的图片名称.png)\n```\n## 标签及分类问题\n标签和分类在博客中显示的效果大概如图所示\n![标签效果](Hexo使用技巧/2020-01-05_17-24.png)\n开启标签和分类功能也很简单，bash中执行\n```bash\nhexo new page tags\nhexo new page categories\n```\n即可以看见在source文件夹下生成了/tags、/categories文件夹\n然后修改`scaffolds/post.md`文件，设置每次创建的博客模板\n```\n---\ntitle: {{ title }}\ndate: {{ date }}\ntags:\ncategories:\n---\n```\n### 标签用法\n多标签`tags: [标签1,标签2,标签3......]`\n![效果](Hexo使用技巧/2020-01-05_18-32.png)\n\n### 草稿\n#### 新建草稿\n```bash\n$ hexo new draft  文章名字\n```\n执行完命令之后你会在`source/_drafts`找到你的草稿文章，Hexo 另外提供` draft `机制，它的原理是新文章将建立在` source/_drafts` 目录下，因此 `hexo generate` 并不会将其编译到 `public `目录下，所以` hexo deploy `也不会将其部署到 GitHub。\n#### 预览草稿\n```bash\n hexo S --draft\n```\n和`hexo s`一样访问<http://localhost:4000/>预览\n\n\n#### 将草稿发布为正式文章\n```bash\n$ hexo P <filename>\n```\n其中` filename`为不包含 `md` 后缀的文章名称。它的原理只是将文章从 `source/_drafts `移动到 `source/_posts `而已。之后的` hexo generate` 与 `hexo deploy` 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 `source/_posts` 目录移动到` source/_drafts` 目录即可。\n\n\n### 坑点\n如果发现在网站上访问不了你的博客，比如我把仓库改成了私有的后发现怎么也访问不了了，改回公开仓库也不行，这里的解决方法就是删除文件夹下面的`.deploy_git`文件夹，再次上传部署就能够访问了，其实如果出现了404多半事Hexo本身的问题，在github方面出错不太可能，所以如果博客整个都崩了，那就把整个文件夹干掉重新来一遍就好了。\n\n","slug":"Hexo使用技巧","published":1,"updated":"2020-01-06T09:39:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6j1xs4e000absuohwjd6ldt","content":"<h1 id=\"Hexo使用技巧\"><a href=\"#Hexo使用技巧\" class=\"headerlink\" title=\"Hexo使用技巧\"></a>Hexo使用技巧</h1><p>在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"摘要问题\"><a href=\"#摘要问题\" class=\"headerlink\" title=\"摘要问题\"></a>摘要问题</h2><p>使用<code>&lt;!--more--&gt;</code>标签即可设置摘要，将该标签放置在摘要和正文之间，在Hexo预览的时候就能够显示摘要内容</p>\n<h2 id=\"图片问题\"><a href=\"#图片问题\" class=\"headerlink\" title=\"图片问题\"></a>图片问题</h2><p>前一篇文章中提到了使用图床来事文章显示图片的方法，但其实这种方法是过于麻烦的，首先你需要获得 图片的链接，然后将该图片插入等你写的MarkDown文章中，好处在于你全部的图片都是存放在GIthub一个项目中的，坏处就是所有文章图片都在一起，没办法管理。Hexo提供了MarkDown文章插入图片的方法。</p>\n<h3 id=\"插入图片准备工作\"><a href=\"#插入图片准备工作\" class=\"headerlink\" title=\"插入图片准备工作\"></a>插入图片准备工作</h3><p>执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br><span class=\"line\">cnpm install hexo-asset-image --save//如果你安装了cnpm的话</span><br></pre></td></tr></table></figure>\n<p>然后在<code>_config.yml</code>文件中把<code>post_asset_folder: true</code>设置为True此时如果执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n 新文章名称</span><br></pre></td></tr></table></figure>\n<p>就会看到除了创建了一片新文章之外，还有一个和新文章名称一致的文件夹，这个文件夹就能够放置一些和该篇文章相关的图片。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2020-01-05_17-21.png\" alt=\"生成的md文件和文件夹\" title>\n                </div>\n                <div class=\"image-caption\">生成的md文件和文件夹</div>\n            </figure>\n<h3 id=\"MarkDown插入图片\"><a href=\"#MarkDown插入图片\" class=\"headerlink\" title=\"MarkDown插入图片\"></a>MarkDown插入图片</h3><p>插入图片的语句就是MarkDown标准的插入图片的语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片描述](文章文件夹&#x2F;要插入的图片名称.png)</span><br></pre></td></tr></table></figure>\n<h2 id=\"标签及分类问题\"><a href=\"#标签及分类问题\" class=\"headerlink\" title=\"标签及分类问题\"></a>标签及分类问题</h2><p>标签和分类在博客中显示的效果大概如图所示</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2020-01-05_17-24.png\" alt=\"标签效果\" title>\n                </div>\n                <div class=\"image-caption\">标签效果</div>\n            </figure>\n<p>开启标签和分类功能也很简单，bash中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>即可以看见在source文件夹下生成了/tags、/categories文件夹<br>然后修改<code>scaffolds/post.md</code>文件，设置每次创建的博客模板</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">tags:</span><br><span class=\"line\">categories:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h3 id=\"标签用法\"><a href=\"#标签用法\" class=\"headerlink\" title=\"标签用法\"></a>标签用法</h3><p>多标签<code>tags: [标签1,标签2,标签3......]</code></p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2020-01-05_18-32.png\" alt=\"效果\" title>\n                </div>\n                <div class=\"image-caption\">效果</div>\n            </figure>\n\n<h3 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h3><h4 id=\"新建草稿\"><a href=\"#新建草稿\" class=\"headerlink\" title=\"新建草稿\"></a>新建草稿</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new draft  文章名字</span><br></pre></td></tr></table></figure>\n<p>执行完命令之后你会在<code>source/_drafts</code>找到你的草稿文章，Hexo 另外提供<code>draft</code>机制，它的原理是新文章将建立在<code>source/_drafts</code> 目录下，因此 <code>hexo generate</code> 并不会将其编译到 <code>public</code>目录下，所以<code>hexo deploy</code>也不会将其部署到 GitHub。</p>\n<h4 id=\"预览草稿\"><a href=\"#预览草稿\" class=\"headerlink\" title=\"预览草稿\"></a>预览草稿</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo S --draft</span><br></pre></td></tr></table></figure>\n<p>和<code>hexo s</code>一样访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>预览</p>\n<h4 id=\"将草稿发布为正式文章\"><a href=\"#将草稿发布为正式文章\" class=\"headerlink\" title=\"将草稿发布为正式文章\"></a>将草稿发布为正式文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo P &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>其中<code>filename</code>为不包含 <code>md</code> 后缀的文章名称。它的原理只是将文章从 <code>source/_drafts</code>移动到 <code>source/_posts</code>而已。之后的<code>hexo generate</code> 与 <code>hexo deploy</code> 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 <code>source/_posts</code> 目录移动到<code>source/_drafts</code> 目录即可。</p>\n<h3 id=\"坑点\"><a href=\"#坑点\" class=\"headerlink\" title=\"坑点\"></a>坑点</h3><p>如果发现在网站上访问不了你的博客，比如我把仓库改成了私有的后发现怎么也访问不了了，改回公开仓库也不行，这里的解决方法就是删除文件夹下面的<code>.deploy_git</code>文件夹，再次上传部署就能够访问了，其实如果出现了404多半事Hexo本身的问题，在github方面出错不太可能，所以如果博客整个都崩了，那就把整个文件夹干掉重新来一遍就好了。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Hexo使用技巧\"><a href=\"#Hexo使用技巧\" class=\"headerlink\" title=\"Hexo使用技巧\"></a>Hexo使用技巧</h1><p>在搭建GIthub图床的过程中，我遇到了图片的问题，其实在使用Hexo的过程中我还遇到了大大小小的不同的问题，这篇文章统统的记录一下方便以后再遇到类似的问题的时候能够更方便的解决。</p>","more":"<h2 id=\"摘要问题\"><a href=\"#摘要问题\" class=\"headerlink\" title=\"摘要问题\"></a>摘要问题</h2><p>使用<code>&lt;!--more--&gt;</code>标签即可设置摘要，将该标签放置在摘要和正文之间，在Hexo预览的时候就能够显示摘要内容</p>\n<h2 id=\"图片问题\"><a href=\"#图片问题\" class=\"headerlink\" title=\"图片问题\"></a>图片问题</h2><p>前一篇文章中提到了使用图床来事文章显示图片的方法，但其实这种方法是过于麻烦的，首先你需要获得 图片的链接，然后将该图片插入等你写的MarkDown文章中，好处在于你全部的图片都是存放在GIthub一个项目中的，坏处就是所有文章图片都在一起，没办法管理。Hexo提供了MarkDown文章插入图片的方法。</p>\n<h3 id=\"插入图片准备工作\"><a href=\"#插入图片准备工作\" class=\"headerlink\" title=\"插入图片准备工作\"></a>插入图片准备工作</h3><p>执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br><span class=\"line\">cnpm install hexo-asset-image --save//如果你安装了cnpm的话</span><br></pre></td></tr></table></figure>\n<p>然后在<code>_config.yml</code>文件中把<code>post_asset_folder: true</code>设置为True此时如果执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n 新文章名称</span><br></pre></td></tr></table></figure>\n<p>就会看到除了创建了一片新文章之外，还有一个和新文章名称一致的文件夹，这个文件夹就能够放置一些和该篇文章相关的图片。</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2020-01-05_17-21.png\" alt=\"生成的md文件和文件夹\" title>\n                </div>\n                <div class=\"image-caption\">生成的md文件和文件夹</div>\n            </figure>\n<h3 id=\"MarkDown插入图片\"><a href=\"#MarkDown插入图片\" class=\"headerlink\" title=\"MarkDown插入图片\"></a>MarkDown插入图片</h3><p>插入图片的语句就是MarkDown标准的插入图片的语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![图片描述](文章文件夹&#x2F;要插入的图片名称.png)</span><br></pre></td></tr></table></figure>\n<h2 id=\"标签及分类问题\"><a href=\"#标签及分类问题\" class=\"headerlink\" title=\"标签及分类问题\"></a>标签及分类问题</h2><p>标签和分类在博客中显示的效果大概如图所示</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2020-01-05_17-24.png\" alt=\"标签效果\" title>\n                </div>\n                <div class=\"image-caption\">标签效果</div>\n            </figure>\n<p>开启标签和分类功能也很简单，bash中执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>即可以看见在source文件夹下生成了/tags、/categories文件夹<br>然后修改<code>scaffolds/post.md</code>文件，设置每次创建的博客模板</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">tags:</span><br><span class=\"line\">categories:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h3 id=\"标签用法\"><a href=\"#标签用法\" class=\"headerlink\" title=\"标签用法\"></a>标签用法</h3><p>多标签<code>tags: [标签1,标签2,标签3......]</code></p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/2020/01/05/Hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2020-01-05_18-32.png\" alt=\"效果\" title>\n                </div>\n                <div class=\"image-caption\">效果</div>\n            </figure>\n\n<h3 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h3><h4 id=\"新建草稿\"><a href=\"#新建草稿\" class=\"headerlink\" title=\"新建草稿\"></a>新建草稿</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new draft  文章名字</span><br></pre></td></tr></table></figure>\n<p>执行完命令之后你会在<code>source/_drafts</code>找到你的草稿文章，Hexo 另外提供<code>draft</code>机制，它的原理是新文章将建立在<code>source/_drafts</code> 目录下，因此 <code>hexo generate</code> 并不会将其编译到 <code>public</code>目录下，所以<code>hexo deploy</code>也不会将其部署到 GitHub。</p>\n<h4 id=\"预览草稿\"><a href=\"#预览草稿\" class=\"headerlink\" title=\"预览草稿\"></a>预览草稿</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo S --draft</span><br></pre></td></tr></table></figure>\n<p>和<code>hexo s</code>一样访问<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>预览</p>\n<h4 id=\"将草稿发布为正式文章\"><a href=\"#将草稿发布为正式文章\" class=\"headerlink\" title=\"将草稿发布为正式文章\"></a>将草稿发布为正式文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo P &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>其中<code>filename</code>为不包含 <code>md</code> 后缀的文章名称。它的原理只是将文章从 <code>source/_drafts</code>移动到 <code>source/_posts</code>而已。之后的<code>hexo generate</code> 与 <code>hexo deploy</code> 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 <code>source/_posts</code> 目录移动到<code>source/_drafts</code> 目录即可。</p>\n<h3 id=\"坑点\"><a href=\"#坑点\" class=\"headerlink\" title=\"坑点\"></a>坑点</h3><p>如果发现在网站上访问不了你的博客，比如我把仓库改成了私有的后发现怎么也访问不了了，改回公开仓库也不行，这里的解决方法就是删除文件夹下面的<code>.deploy_git</code>文件夹，再次上传部署就能够访问了，其实如果出现了404多半事Hexo本身的问题，在github方面出错不太可能，所以如果博客整个都崩了，那就把整个文件夹干掉重新来一遍就好了。</p>"}],"PostAsset":[{"_id":"source/_posts/使用Github搭建图床/上传成功.png","slug":"上传成功.png","post":"ck6j1xs480005bsuoejjod3gt","modified":0,"renderable":0},{"_id":"source/_posts/linux常用设置/2020-01-05_21-00.png","slug":"2020-01-05_21-00.png","post":"ck6j1xs4a0006bsuo30sh3emo","modified":0,"renderable":0},{"_id":"source/_posts/wsl遇到的坑/Snipaste_2020-01-23_14-01-22.png","slug":"Snipaste_2020-01-23_14-01-22.png","post":"ck6j1xs3u0002bsuo7tnxhi6r","modified":0,"renderable":0},{"_id":"source/_posts/wsl遇到的坑/下载安装最新的LTSnodejs.png","slug":"下载安装最新的LTSnodejs.png","post":"ck6j1xs3u0002bsuo7tnxhi6r","modified":0,"renderable":0},{"_id":"source/_posts/Hexo使用技巧/2020-01-05_17-21.png","slug":"2020-01-05_17-21.png","post":"ck6j1xs4e000absuohwjd6ldt","modified":0,"renderable":0},{"_id":"source/_posts/Hexo使用技巧/2020-01-05_17-24.png","slug":"2020-01-05_17-24.png","post":"ck6j1xs4e000absuohwjd6ldt","modified":0,"renderable":0},{"_id":"source/_posts/Hexo使用技巧/2020-01-05_18-32.png","slug":"2020-01-05_18-32.png","post":"ck6j1xs4e000absuohwjd6ldt","modified":0,"renderable":0},{"_id":"source/_posts/使用Github搭建图床/PicGo设置.png","slug":"PicGo设置.png","post":"ck6j1xs480005bsuoejjod3gt","modified":0,"renderable":0},{"_id":"source/_posts/使用Github搭建图床/创建一个新仓库.png","slug":"创建一个新仓库.png","post":"ck6j1xs480005bsuoejjod3gt","modified":0,"renderable":0},{"_id":"source/_posts/使用Github搭建图床/生成token.png","slug":"生成token.png","post":"ck6j1xs480005bsuoejjod3gt","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ck6j1xs4a0006bsuo30sh3emo","category_id":"ck6j1xs460003bsuobcx77w70","_id":"ck6j1xs4g000bbsuo4epi4hd8"},{"post_id":"ck6j1xs3m0000bsuodqex1g2f","category_id":"ck6j1xs460003bsuobcx77w70","_id":"ck6j1xs4i000ebsuohxsa7mew"},{"post_id":"ck6j1xs4b0007bsuoc880dlvt","category_id":"ck6j1xs460003bsuobcx77w70","_id":"ck6j1xs4i000gbsuo98v3btaf"},{"post_id":"ck6j1xs4e000absuohwjd6ldt","category_id":"ck6j1xs460003bsuobcx77w70","_id":"ck6j1xs4j000jbsuo8kiwfv4i"},{"post_id":"ck6j1xs3u0002bsuo7tnxhi6r","category_id":"ck6j1xs460003bsuobcx77w70","_id":"ck6j1xs4j000kbsuo01hmblrq"},{"post_id":"ck6j1xs480005bsuoejjod3gt","category_id":"ck6j1xs460003bsuobcx77w70","_id":"ck6j1xs4k000mbsuo2vgrepz5"}],"PostTag":[{"post_id":"ck6j1xs3m0000bsuodqex1g2f","tag_id":"ck6j1xs470004bsuo46eyf17e","_id":"ck6j1xs4i000fbsuog6ueeb72"},{"post_id":"ck6j1xs3m0000bsuodqex1g2f","tag_id":"ck6j1xs4c0009bsuodflc5bj6","_id":"ck6j1xs4i000hbsuo0spo8ne7"},{"post_id":"ck6j1xs3u0002bsuo7tnxhi6r","tag_id":"ck6j1xs4h000dbsuo6vozgz5n","_id":"ck6j1xs4k000nbsuoh1gkg3tr"},{"post_id":"ck6j1xs3u0002bsuo7tnxhi6r","tag_id":"ck6j1xs4j000ibsuo4nt8augy","_id":"ck6j1xs4k000obsuo6rze2ycs"},{"post_id":"ck6j1xs480005bsuoejjod3gt","tag_id":"ck6j1xs4k000lbsuo7cc26qdq","_id":"ck6j1xs4m000sbsuobcpc1hkm"},{"post_id":"ck6j1xs480005bsuoejjod3gt","tag_id":"ck6j1xs4c0009bsuodflc5bj6","_id":"ck6j1xs4m000tbsuodj8f1a1v"},{"post_id":"ck6j1xs480005bsuoejjod3gt","tag_id":"ck6j1xs4l000qbsuo92dydue1","_id":"ck6j1xs4n000vbsuobne67ey6"},{"post_id":"ck6j1xs4a0006bsuo30sh3emo","tag_id":"ck6j1xs4h000dbsuo6vozgz5n","_id":"ck6j1xs4n000wbsuo1aiuaqtq"},{"post_id":"ck6j1xs4a0006bsuo30sh3emo","tag_id":"ck6j1xs470004bsuo46eyf17e","_id":"ck6j1xs4n000ybsuo6f1614sw"},{"post_id":"ck6j1xs4b0007bsuoc880dlvt","tag_id":"ck6j1xs4k000lbsuo7cc26qdq","_id":"ck6j1xs4p0011bsuociun9x7w"},{"post_id":"ck6j1xs4b0007bsuoc880dlvt","tag_id":"ck6j1xs4h000dbsuo6vozgz5n","_id":"ck6j1xs4p0012bsuo13z0783p"},{"post_id":"ck6j1xs4b0007bsuoc880dlvt","tag_id":"ck6j1xs4c0009bsuodflc5bj6","_id":"ck6j1xs4q0014bsuo3xuu9kdq"},{"post_id":"ck6j1xs4e000absuohwjd6ldt","tag_id":"ck6j1xs4k000lbsuo7cc26qdq","_id":"ck6j1xs4q0015bsuo3w4a4kpv"},{"post_id":"ck6j1xs4e000absuohwjd6ldt","tag_id":"ck6j1xs4j000ibsuo4nt8augy","_id":"ck6j1xs4r0016bsuo6hydadfc"}],"Tag":[{"name":"笔记","_id":"ck6j1xs470004bsuo46eyf17e"},{"name":"github","_id":"ck6j1xs4c0009bsuodflc5bj6"},{"name":"linux","_id":"ck6j1xs4h000dbsuo6vozgz5n"},{"name":"博客","_id":"ck6j1xs4j000ibsuo4nt8augy"},{"name":"Hexo","_id":"ck6j1xs4k000lbsuo7cc26qdq"},{"name":"图床","_id":"ck6j1xs4l000qbsuo92dydue1"}]}}